{"version":3,"sources":["panels/FirstConnect.js","panels/Task.js","panels/Profile.js","panels/GiveTask.js","panels/AllTask.js","panels/Card_Info.js","panels/ThematicsTask.js","hooks/useTaskHook.js","panels/Candidates.js","panels/Chats.js","App.js","index.js"],"names":["FirstConnect","props","thematics","id","name","setPopout","useState","search","SetSearch","className","top","placeholder","size","onClick","fetch","id_v","document","getElementById","value","then","response","json","result","setActiveStory","window","location","reload","console","log","err","catch","createPerson","onChange","e","target","after","length","filter","toLowerCase","indexOf","map","thematic","key","Task","cat","activeInfo","setActiveInfo","awaitInfo","setAwaitInfo","employerInfo","setemployerInfo","slideIndex","setSlideIndex","useEffect","a","GetData","GetData2","GetData3","right","scrollTo","selected","align","slideWidth","slideIndex1","setTimeout","category","index","style","padding","mode","item","index2","indicator","deadline","expandable","setDataTransfer","setActivePanelTask","Profile","data","setData","before","src","fetchedUser","photo_200","first_name","last_name","about","aside","backgroundImage","height","display","alignItems","justifyContent","paddingBottom","borderRadius","color","GiveTask","createTask","deadLine","price","find","alert","result2","type","defaultValue","status","AllTask","setActivePanelAllTask","Card_Info","closeModal","setActiveModal","activeModal","onClose","header","left","chooseCard","categori","_id","ThematicsTask","pageNumber","setPageNumber","skip","loading","setLoading","error","setError","tasks","setTasks","hasMore","setHasMore","responce","results","prevTaks","useTaskHook","dataTransfer","observer","useRef","lastCardElementRef","useCallback","node","current","disconnect","IntersectionObserver","entries","isIntersecting","prevPageNumber","observe","task","ref","background","paddingTop","Candidates","EmployeeInfo","setEmployeeInfo","person","vk_id","rate","actionsLayout","actions","title","autoclose","action","AgreeWithTask","Chat","socket","io","connect","dataMessage","setDataMessage","on","emit","my","url","URL","href","searchParams","get","App","activePanelTask","activePanelAllTask","activeStory","setUser","popout","bridge","send","user","subscribe","detail","schemeAttribute","createAttribute","body","attributes","setNamedItem","fetchData","next","currentTarget","dataset","story","tabbar","data-story","label","count_task","text","activePanel","Chats","ReactDOM","render"],"mappings":"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","file":"static/js/main.9d493808.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\r\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\r\nimport Textarea from '@vkontakte/vkui/dist/components/Textarea/Textarea'\r\nimport Button from '@vkontakte/vkui/dist/components/Button/Button';\r\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\r\nimport Cell from '@vkontakte/vkui/dist/components/Cell/Cell';\r\nimport Div from '@vkontakte/vkui/dist/components/Div/Div';\r\nimport Avatar from '@vkontakte/vkui/dist/components/Avatar/Avatar';\r\nimport List from \"@vkontakte/vkui/dist/components/List/List\"\r\nimport Checkbox from '@vkontakte/vkui/dist/components/Checkbox/Checkbox'\r\nimport Search from \"@vkontakte/vkui/dist/components/Search/Search\"\r\n\r\n\r\nimport '../css/FirstConnect.css'\r\nimport { FormLayout } from '@vkontakte/vkui';\r\n\r\nconst createPerson = (props) =>{\r\n    fetch(\"https://cors-anywhere.herokuapp.com/https://task-today-tpuhack.herokuapp.com/create_employee?id=id\"+props.id_v+\"&phone=892346750213&\"+\r\n    \"about=\"+document.getElementById(\"About\").value)\r\n    \t\t.then(response => response.json())\r\n    \t\t.then(result =>{\r\n        \ttry{\r\n\t\t\t\tif (result == \"1\") {\r\n\t\t\t\t\tprops.setActiveStory('Task')\r\n\t\t\t\t}else{\r\n                    props.setActiveStory('FirstConnect')\r\n                }\r\n                window.location.reload();\r\n                props.setActiveStory('Task')\r\n                console.log(\"GO HOME\"); \r\n        }catch(err){ console.log(err);\r\n        }\r\n\r\n    \t}).catch(err => console.log(err))\r\n\r\n}\r\n\r\nconst FirstConnect = (props) => {        \r\n\r\n    const thematics = [\r\n        {id: 1, name: \"Программирование\"},\r\n        {id: 2, name: \"Доставка\"},\r\n        {id: 3, name: \"Учёба\"},\r\n        {id: 4, name: \"Рисование\"},\r\n        {id: 5, name: \"Дизайн\"},\r\n        {id: 6, name: \"Пение\"},\r\n        {id: 7, name: \"Готовка\"},\r\n        {id: 8, name: \"Minecraft\"},\r\n        {id: 9, name: \"Общение\"},\r\n        {id: 10, name: \"Прочее\"},\r\n        \r\n      ];\r\n    props.setPopout(null);\r\n    const [search, SetSearch] = useState(\"\");\r\n\r\n    const onChange = (e) =>\r\n    {\r\n        SetSearch(e.target.value);        \r\n    }   \r\n\r\n    return(\r\n        <Panel id={props.id}>\r\n        \r\n\t\t<PanelHeader className='PanelHeader'>TaskToday</PanelHeader>\r\n        <FormLayout>\r\n            <div className=\"MainText\">\r\n                <div>Добро пожаловать</div>\r\n\t\t        <div>Для удачного использования введите некоторую информацию и разрешите уведомления</div>\r\n            </div>\r\n            <Textarea className=\"About\" id=\"About\" top=\"О себе\" placeholder=\"Расскажите что-нибудь c:\"></Textarea>\r\n            <Button size=\"xl\" onClick={()=>{createPerson(props)}}>Закончить</Button>            \r\n            <Search top=\"Чем вы будете заниматься?\" value={search} onChange={onChange} after={null}/>\r\n                {thematics.length > 0 &&\r\n                    <List>\r\n                        {thematics.filter(({name})=>{return name.toLowerCase().indexOf(search.toLowerCase())>-1}).map(thematic => <Checkbox key={thematic.id}>{thematic.name}</Checkbox>)}\r\n                    </List>\r\n                }            \r\n            \r\n        </FormLayout>\r\n        \r\n        \r\n\t</Panel>\r\n    );\r\n\t\r\n};\r\n\r\nFirstConnect.propTypes = {\r\n\t\r\n};\r\n\r\nexport default FirstConnect;\r\n","import React, { useState, useEffect } from 'react';  //eslint-disable-next-line\r\nimport Epic from '@vkontakte/vkui/dist/components/Epic/Epic'\r\nimport PropTypes from 'prop-types';\r\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\r\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\r\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\r\nimport ReactSwipe from 'react-swipe';\r\nimport Button from '@vkontakte/vkui/dist/components/Button/Button';\r\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\r\nimport Cell from '@vkontakte/vkui/dist/components/Cell/Cell';\r\nimport Tabs from '@vkontakte/vkui/dist/components/Tabs/Tabs'\r\nimport TabsItem from '@vkontakte/vkui/dist/components/TabsItem/TabsItem'\r\nimport Gallery from '@vkontakte/vkui/dist/components/Gallery/Gallery'\r\nimport Header from '@vkontakte/vkui/dist/components/Header/Header'\r\nimport Card from '@vkontakte/vkui/dist/components/Card/Card'\r\nimport Separator from '@vkontakte/vkui/dist/components/Separator/Separator'\r\nimport PanelHeaderButton from '@vkontakte/vkui/dist/components/PanelHeaderButton/PanelHeaderButton'\r\nimport Icon24MoreHorizontal from '@vkontakte/icons/dist/24/more_horizontal'\r\nimport Div from '@vkontakte/vkui/dist/components/Div/Div';\r\nimport List from '@vkontakte/vkui/dist/components/List/List';\r\nimport Tabbar from '@vkontakte/vkui/dist/components/Tabbar/Tabbar'\r\nimport Icon28NewsfeedOutline from '@vkontakte/icons/dist/28/newsfeed_outline'\r\nimport Icon28UserOutline from '@vkontakte/icons/dist/28/user_outline'\r\nimport Icon28Notifications from '@vkontakte/icons/dist/28/notifications'\r\nimport Icon28More from '@vkontakte/icons/dist/28/more'\r\nimport TabbarItem from '@vkontakte/vkui/dist/components/TabbarItem/TabbarItem'\r\nimport Avatar from '@vkontakte/vkui/dist/components/Avatar/Avatar';\r\nimport { FormLayout } from '@vkontakte/vkui';\r\nimport '../css/Task.css'\r\n\r\nfunction isEmpty(object) {\r\n    return JSON.stringify(object) == \"{}\";\r\n  }\r\n  \r\n\r\nconst Task = (props) => {\r\n\r\n  const cat = ['Программирование','Доставка','Учёба','Рисование','Дизайн','Пение','Готовка','Minecraft','Общение','Прочее'];\r\n \r\n  const [activeInfo,setActiveInfo]=useState({});\r\n  const [awaitInfo, setAwaitInfo] = useState({});\r\n  const [employerInfo, setemployerInfo] = useState({});\r\n  const [activeModal, setActiveModal] = useState(null);\r\n  const [slideIndex, setSlideIndex] = useState(0);\r\n  const [fun,setFun] = useState(null);\r\n\r\n  useEffect(() => {\r\n      props.setPopout(<ScreenSpinner size='large' />);\r\n      async function GetData(){\r\n        fetch(\"https://cors-anywhere.herokuapp.com/https://task-today-tpuhack.herokuapp.com/get_active_task?id=id\"+props.id_v).then(response => response.json())\r\n        .then(result =>{\r\n          console.log(result);\r\n          setActiveInfo(result);\r\n        })\r\n      }\r\n      async function GetData2(){\r\n        fetch(\"https://cors-anywhere.herokuapp.com/https://task-today-tpuhack.herokuapp.com/get_await_task?id=id\"+props.id_v).then(response => response.json())\r\n        .then(result =>{\r\n          console.log(result);\r\n          setAwaitInfo(result);\r\n        })\r\n      }\r\n      async function GetData3(){\r\n        fetch(\"https://cors-anywhere.herokuapp.com/https://task-today-tpuhack.herokuapp.com/get_employer_task?id=id\"+props.id_v).then(response => response.json())\r\n        .then(result =>{\r\n          console.log(result);\r\n          setemployerInfo(result);\r\n          props.setPopout(null);\r\n        })\r\n      }\r\n      GetData();\r\n      GetData2();\r\n      GetData3();\r\n      \r\n  }, []);\r\n\r\n\r\n\r\n\treturn(\r\n      <Panel id={props.id}>\r\n            \r\n            <PanelHeader\r\n             right={<PanelHeaderButton><Icon24MoreHorizontal /></PanelHeaderButton>} \r\n           >Задания</PanelHeader>\r\n           <Tabs className=\"TabsTask\">\r\n             <TabsItem onClick={()=>{setSlideIndex(0); window.scrollTo(0, 0);} } selected={slideIndex===0?slideIndex+1:null}>Активные</TabsItem>\r\n             <TabsItem onClick={()=>{setSlideIndex(1); window.scrollTo(0, 0);}} selected={slideIndex==1?slideIndex:null}>Мои</TabsItem>\r\n             <TabsItem onClick={()=>{setSlideIndex(2); window.scrollTo(0, 0);}} selected={slideIndex==2?slideIndex:null}>В ожидание</TabsItem>\r\n             \r\n             {/* <TabsItem onClick={()=>{fun.slide(0,0); setSlideIndex(0);} } selected={slideIndex===0?slideIndex+1:null}>Активные</TabsItem>\r\n             <TabsItem onClick={()=>{fun.slide(1,0); setSlideIndex(1)}} selected={slideIndex==1?slideIndex:null}>Ожидают подтверждения</TabsItem>\r\n             <TabsItem onClick={()=>{fun.slide(2,0); setSlideIndex(2)}} selected={slideIndex==2?slideIndex:null}>Мои</TabsItem> */}\r\n             {/* <TabsItem onClick={()=>{setSlideIndex(0); props.setActivePanelTask(\"Active\")}} selected={slideIndex===0?slideIndex+1:null}>Активные</TabsItem>\r\n             <TabsItem onClick={()=>{setSlideIndex(1); props.setActivePanelTask(\"Await\")}} selected={slideIndex==1?slideIndex:null}>Ожидают подтверждения</TabsItem>\r\n             <TabsItem onClick={()=>{setSlideIndex(2); props.setActivePanelTask(\"My\")}} selected={slideIndex==2?slideIndex:null}>Мои</TabsItem> */}\r\n           </Tabs>\r\n           <Separator />\r\n           {/* <ReactSwipe className=\"GalleryBody\" ref={el => (setFun(el))}> */}\r\n           <Gallery className=\"GalleryBody\" align='center' slideWidth=\"100%\" slideIndex={slideIndex} onChange={(slideIndex1)=> {setSlideIndex(slideIndex1); setTimeout(window.scrollTo(0, 0),5000);}} >\r\n           {/* <FormLayout> */}\r\n           <div className=\"ListTask\">\r\n           {activeInfo && \r\n                 cat.map((category,index) =>\r\n                 activeInfo && activeInfo[category] && \r\n                 <Div key={index} style={{padding : 0}}>\r\n                   {activeInfo && activeInfo[category].length != 0 && <Header mode=\"secondary\">{category}</Header> }\r\n                   {activeInfo && activeInfo[category] && activeInfo[category].map((item,index2) => <Div key={index+index2}style={{padding : 0}}>\r\n                   {/* <Cell className=\"CellBodyTask\" indicator={item.deadline} expandable >\r\n                             {item.name}\r\n                           </Cell> */}\r\n                       <Card size=\"l\" mode=\"shadow\" className=\"CardBody\">\r\n                           <Cell indicator={item.deadline} expandable >\r\n                             {item.name}\r\n                           </Cell>\r\n                       </Card>\r\n                   </Div>)}\r\n                 </Div>)\r\n               }\r\n           </div>\r\n           <div className=\"ListTask\">          \r\n               {employerInfo && \r\n                 cat.map((category,index) =>\r\n                   employerInfo && employerInfo[category] && \r\n                 <Div key={index}style={{padding : 0}}>\r\n                   {employerInfo && employerInfo[category].length != 0 && <Header mode=\"secondary\">{category}</Header> }\r\n                   {employerInfo && employerInfo[category] && employerInfo[category].map((item,index2) => <Div key={index+index2}style={{padding : 0}}>\r\n                   {/* <Cell className=\"CellBodyTask\" indicator={item.deadline} expandable onClick={()=>{props.setDataTransfer(item)\r\n                                                                  props.setActivePanelTask(\"Candidates\")}}>\r\n                             {item.name}\r\n                           </Cell> */}\r\n                       <Card size=\"l\" mode=\"shadow\" className=\"CardBody\" onClick={()=>{props.setDataTransfer(item)\r\n                                                                  props.setActivePanelTask(\"Candidates\")}}>\r\n                           <Cell indicator={item.deadline} expandable >\r\n                             {item.name}\r\n                           </Cell>\r\n                       </Card>\r\n                   </Div>)}\r\n                 </Div>)\r\n               }\r\n           </div>\r\n           <div className=\"ListTask\">\r\n           {awaitInfo && \r\n                 cat.map((category,index) =>\r\n                   awaitInfo && awaitInfo[category] && \r\n                 <Div key={index}style={{padding : 0}}>\r\n                   {awaitInfo && awaitInfo[category].length != 0 && <Header mode=\"secondary\">{category}</Header> }\r\n                   {awaitInfo && awaitInfo[category] && awaitInfo[category].map((item,index2) => <Div key={index+index2}style={{padding : 0}}>\r\n                   {/* <Cell className=\"CellBodyTask\" indicator={item.deadline} expandable >\r\n                             {item.name}\r\n                           </Cell> */}\r\n                       <Card size=\"l\" mode=\"shadow\" className=\"CardBody\" >\r\n                           <Cell indicator={item.deadline} expandable >\r\n                             {item.name}\r\n                           </Cell>\r\n                       </Card>\r\n                   </Div>)}\r\n                 </Div>)\r\n               }\r\n           </div>\r\n             {/* <List className=\"ListTask\">         \r\n               {activeInfo && \r\n                 cat.map((category,index) =>\r\n                 activeInfo && activeInfo[category] && \r\n                 <Div key={index} style={{padding : 0}}>\r\n                   {activeInfo && activeInfo[category].length != 0 && <Header mode=\"secondary\">{category}</Header> }\r\n                   {activeInfo && activeInfo[category] && activeInfo[category].map((item,index2) => <Div key={index+index2}style={{padding : 0}}>\r\n                       <Card size=\"l\" mode=\"shadow\" className=\"CardBody\">\r\n                           <Cell indicator={item.deadline} expandable >\r\n                             {item.name}\r\n                           </Cell>\r\n                       </Card>\r\n                   </Div>)}\r\n                 </Div>)\r\n               }\r\n               <div className=\"div_dop\"/>\r\n             </List>\r\n             <List className=\"ListTask\">         \r\n               {awaitInfo && \r\n                 cat.map((category,index) =>\r\n                   awaitInfo && awaitInfo[category] && \r\n                 <Div key={index}style={{padding : 0}}>\r\n                   {awaitInfo && awaitInfo[category].length != 0 && <Header mode=\"secondary\">{category}</Header> }\r\n                   {awaitInfo && awaitInfo[category] && awaitInfo[category].map((item,index2) => <Div key={index+index2}style={{padding : 0}}>\r\n                       <Card size=\"l\" mode=\"shadow\" className=\"CardBody\" >\r\n                           <Cell indicator={item.deadline} expandable >\r\n                             {item.name}\r\n                           </Cell>\r\n                       </Card>\r\n                   </Div>)}\r\n                 </Div>)\r\n               }\r\n               <div className=\"div_dop\"/>\r\n             </List>\r\n             <List className=\"ListTask\">         \r\n               {employerInfo && \r\n                 cat.map((category,index) =>\r\n                   employerInfo && employerInfo[category] && \r\n                 <Div key={index}style={{padding : 0}}>\r\n                   {employerInfo && employerInfo[category].length != 0 && <Header mode=\"secondary\">{category}</Header> }\r\n                   {employerInfo && employerInfo[category] && employerInfo[category].map((item,index2) => <Div key={index+index2}style={{padding : 0}}>\r\n                       <Card size=\"l\" mode=\"shadow\" className=\"CardBody\" onClick={()=>{props.setDataTransfer(item)\r\n                                                                  props.setActivePanelTask(\"Candidates\")}}>\r\n                           <Cell indicator={item.deadline} expandable >\r\n                             {item.name}\r\n                           </Cell>\r\n                       </Card>\r\n                   </Div>)}\r\n                 </Div>)\r\n               }\r\n               <div className=\"div_dop\"/>\r\n             </List> */}\r\n             \r\n             {/* </FormLayout> */}\r\n           </Gallery>\r\n           {/* </ReactSwipe> */}\r\n               {/* <FormLayout>\r\n               <Group header={<Header mode=\"primary\">Активные</Header>}>         \r\n               {activeInfo && \r\n                 cat.map(category =>\r\n                 activeInfo && activeInfo[category] && \r\n                 <Div key={category}style={{padding : 0}}>\r\n                   {activeInfo && activeInfo[category].length != 0 && <Header mode=\"secondary\">{category}</Header> }\r\n                   {activeInfo && activeInfo[category] && activeInfo[category].map(item => <Div key={category+item.name}style={{padding : 0}}>\r\n                       <Card size=\"l\" mode=\"shadow\" className=\"CardBody\">\r\n                           <Cell indicator={item.deadline} expandable >\r\n                             {item.name}\r\n                           </Cell>\r\n                       </Card>\r\n                   </Div>)}\r\n                 </Div>)\r\n               }\r\n             </Group>\r\n             <Group header={<Header mode=\"primary\">Ожидают подтверждения</Header>}>         \r\n               {awaitInfo && \r\n                 cat.map(category =>\r\n                   awaitInfo && awaitInfo[category] && \r\n                 <Div key={category}style={{padding : 0}}>\r\n                   {awaitInfo && awaitInfo[category].length != 0 && <Header mode=\"secondary\">{category}</Header> }\r\n                   {awaitInfo && awaitInfo[category] && awaitInfo[category].map(item => <Div key={category+item.name}style={{padding : 0}}>\r\n                       <Card size=\"l\" mode=\"shadow\" className=\"CardBody\" >\r\n                           <Cell indicator={item.deadline} expandable >\r\n                             {item.name}\r\n                           </Cell>\r\n                       </Card>\r\n                   </Div>)}\r\n                 </Div>)\r\n               }\r\n             </Group>\r\n             <Group header={<Header mode=\"primary\">Мои задания</Header>}>         \r\n               {employerInfo && \r\n                 cat.map(category =>\r\n                   employerInfo && employerInfo[category] && \r\n                 <Div key={category}style={{padding : 0}}>\r\n                   {employerInfo && employerInfo[category].length != 0 && <Header mode=\"secondary\">{category}</Header> }\r\n                   {employerInfo && employerInfo[category] && employerInfo[category].map(item => <Div key={category+item.name}style={{padding : 0}}>\r\n                       <Card size=\"l\" mode=\"shadow\" className=\"CardBody\" onClick={()=>{props.setDataTransfer(item)\r\n                                                                  props.setActivePanelTask(\"Candidates\")}}>\r\n                           <Cell indicator={item.deadline} expandable >\r\n                             {item.name}\r\n                           </Cell>\r\n                       </Card>\r\n                   </Div>)}\r\n                 </Div>)\r\n               }\r\n             </Group>\r\n             </FormLayout> */}\r\n         </Panel>\r\n\t\t\r\n\t\t\r\n\t\r\n\t);\r\n};\r\n\r\nTask.propTypes = {\r\n};\r\n\r\nexport default Task;\r\n","import React,{ useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\r\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\r\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\r\nimport Button from '@vkontakte/vkui/dist/components/Button/Button';\r\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\r\nimport Cell from '@vkontakte/vkui/dist/components/Cell/Cell';\r\nimport Div from '@vkontakte/vkui/dist/components/Div/Div';\r\nimport Header from '@vkontakte/vkui/dist/components/Header/Header'\r\nimport Separator from '@vkontakte/vkui/dist/components/Separator/Separator'\r\nimport Icon16Dropdown from '@vkontakte/icons/dist/16/dropdown'\r\nimport Counter from '@vkontakte/vkui/dist/components/Counter/Counter'\r\nimport UsersStack from '@vkontakte/vkui/dist/components/UsersStack/UsersStack'\r\nimport Icon16Chevron from '@vkontakte/icons/dist/16/chevron'\r\n\r\nimport Avatar from '@vkontakte/vkui/dist/components/Avatar/Avatar';\r\n// localhost:8000/get_employee?id=id164078040\r\nconst Profile = (props) => {\r\nconst [data, setData] = useState(null);\r\n  useEffect(() => {\r\n    props.setPopout(<ScreenSpinner size='large' />);\r\n    fetch(\"https://cors-anywhere.herokuapp.com/https://task-today-tpuhack.herokuapp.com/get_employee?id=id\"+props.id_v).then(response => response.json())\r\n    .then(result =>{\r\n        console.log(result);\r\n        setData(result);\r\n        props.setPopout(null);\r\n    })\r\n}, []);\r\n  return(\r\n\t<Panel id=\"Profile\">\r\n            <PanelHeader>Профиль</PanelHeader>\r\n             <Cell\r\n          size=\"l\"\r\n          // description=\"VKontakte\"\r\n          before={<Avatar src={props.fetchedUser.photo_200}/>}\r\n        >\r\n          {props.fetchedUser.first_name} {props.fetchedUser.last_name}\r\n        </Cell>\r\n        <Separator />\r\n        <Header>\r\n        О себе\r\n      </Header>\r\n      {data &&\r\n            <Div>{data.about}</Div>\r\n          }\r\n      <Separator />\r\n       <Header aside={<Icon16Dropdown />} indicator={<Counter size=\"s\" mode=\"prominent\">4.8</Counter>}>\r\n        Мой рейтинг\r\n      </Header>\r\n      <Div>\r\n        <div style={{\r\n          backgroundImage: 'linear-gradient(135deg, #f24973 0%, #3948e6 100%)',\r\n          height: 200,\r\n          display: 'flex',\r\n          alignItems: 'flex-end',\r\n          justifyContent: 'center',\r\n          paddingBottom: '6px',\r\n          borderRadius: 12\r\n        }}>\r\n          <UsersStack\r\n\r\n            style={{ color: \"#fff\" }}\r\n          >Проголосовали 228 человек</UsersStack>\r\n        </div>\r\n      </Div>\r\n      <Separator />\r\n        <Header>\r\n        История заданий\r\n      </Header>\r\n      <Separator />\r\n      <Header mode=\"secondary\"  aside={<Icon16Chevron />}>\r\n        Стать работодателем\r\n      </Header>\r\n          </Panel>\r\n        \r\n);\r\n}\r\nProfile.propTypes = {\r\n};\r\n\r\nexport default Profile;\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\r\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\r\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\r\nimport Textarea from '@vkontakte/vkui/dist/components/Textarea/Textarea'\r\nimport Button from '@vkontakte/vkui/dist/components/Button/Button';\r\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\r\nimport FixedLayout from '@vkontakte/vkui/dist/components/FixedLayout/FixedLayout'\r\nimport Cell from '@vkontakte/vkui/dist/components/Cell/Cell';\r\nimport Div from '@vkontakte/vkui/dist/components/Div/Div';\r\nimport Avatar from '@vkontakte/vkui/dist/components/Avatar/Avatar';\r\nimport List from \"@vkontakte/vkui/dist/components/List/List\"\r\nimport Checkbox from '@vkontakte/vkui/dist/components/Checkbox/Checkbox'\r\nimport Input from '@vkontakte/vkui/dist/components/Input/Input'\r\nimport Select from '@vkontakte/vkui/dist/components/Select/Select'\r\nimport Search from \"@vkontakte/vkui/dist/components/Search/Search\"\r\n\r\nimport '../css/GiveTask.css'\r\n\r\nimport { FormLayout } from '@vkontakte/vkui';\r\nimport { Alert } from '@vkontakte/vkui';\r\n\r\n\r\n\r\n\r\nconst GiveTask = (props) => {        \r\n\r\n    const thematics = [\r\n        {id: 1, name: \"Программирование\"},\r\n        {id: 2, name: \"Доставка\"},\r\n        {id: 3, name: \"Учёба\"},\r\n        {id: 4, name: \"Дизайн\"},\r\n        {id: 5, name: \"Пение\"},\r\n        {id: 6, name: \"Готовка\"},\r\n        {id: 7, name: \"Minecraft\"},\r\n        {id: 8, name: \"Общение\"},\r\n        {id: 9, name: \"Рисование\"},\r\n        {id: 10, name: \"Скульптура\"},\r\n        {id: 11, name: \"Прочее\"},        \r\n      ];\r\n\r\n    const [search, SetSearch] = useState(\"\");\r\n\r\n    const onChange = (e) =>\r\n    {\r\n        SetSearch(e.target.value);        \r\n    }   \r\n\r\n    const onClick = (e) =>\r\n    {        \r\n        createTask();    \r\n      //   props.setPopout(\r\n      //       <Alert\r\n      //   actions={[{\r\n      //     title: 'Отмена',\r\n      //     autoclose: true,\r\n      //     mode: 'cancel'\r\n      //   }, {\r\n      //     title: 'Добавить',\r\n      //     autoclose: true,\r\n      //   }]}\r\n      // >          \r\n      //   <h2>Подтвердите действие</h2>\r\n      //   <p>Добавить пользователю право на модерацию контента.</p>\r\n      // </Alert>\r\n      //   ); \r\n    }\r\n\r\n    const createTask = ()=>\r\n    {   \r\n        props.setPopout(<ScreenSpinner size='large' />);\r\n        const name = document.getElementById(\"TaskName\").value;\r\n        const about = document.getElementById(\"About\").value;\r\n        const deadLine = document.getElementById(\"Dead-line\").value;\r\n        const thematic = document.getElementById(\"Thematic\").value;\r\n        const price = document.getElementById(\"TaskPrice\").value;\r\n        console.log(thematic, thematics.find(({id}) =>{return id == thematic}).name);\r\n        fetch(`https://cors-anywhere.herokuapp.com/https://task-today-tpuhack.herokuapp.com/create_task?name=${name}&about=${about}&categori=${thematics.find(({id}) =>{return id == thematic}).name}&price=${price}&id_employer=id${props.id_v}&deadline=${deadLine}`)\r\n    \t\t.then(response => response.json())\r\n    \t\t.then(result =>{\r\n        \ttry{\r\n                props.setPopout(null);\r\n                // console.log(result)\r\n\t\t\t\tif (result == \"0\") {\r\n          // console.log(thematics.find(({id}) =>{return id == thematic}).name);\r\n\t\t\t\t\talert(\"Ошибка подачи задания\");\r\n\t\t\t\t}else{\r\n                    alert(\"Задание подано\")\r\n                    fetch(`https://cors-anywhere.herokuapp.com/https://task-today-tpuhack.herokuapp.com/set_new_task?task_id=${result}&id=id${props.id_v}`)\r\n    \t\t        .then(response => response.json())\r\n    \t\t        .then(result2 =>{   \r\n                        props.setActiveStory(\"Task\")                         \r\n                        console.log(result2);\r\n                    });\t\t\t\t\r\n\t\t\t\t}\t\t\t\t\r\n            }\r\n            catch(err){props.setPopout(null); console.log(err);\r\n            }});\r\n    }    \r\n    return(\r\n        <Panel id={props.id}>\r\n        \r\n\t\t<PanelHeader className='PanelHeader'>Дать задание</PanelHeader>\r\n        <FormLayout>            \r\n            <div className=\"MainText\" >\r\n\t\t        <div >Укажите ваше задание</div>\r\n            </div>            \r\n            <Input id=\"TaskName\" top = \"Название\" type=\"text\" defaultValue=\"\" status=\"default\"/>\r\n            <Textarea className=\"About\" id=\"About\" top=\"О задании\" placeholder=\"Расскажите что должен делать c:\" status=\"default\"></Textarea>\r\n            <Input id=\"Dead-line\" top = \"Дедлайн\" type=\"date\" defaultValue=\"\" status=\"default\"/>                       \r\n            <Select id=\"Thematic\" placeholder=\"Категория\"status=\"default\">\r\n                {thematics.map(thematic => <option key={thematic.id} value={thematic.id}>{thematic.name}</option>)}                \r\n            </Select>                              \r\n            <Input id=\"TaskPrice\" top = \"Вознаграждение\" type=\"text\" defaultValue=\"\" status=\"default\"/>\r\n            <Button size=\"xl\" onClick={createTask} status=\"default\">Добавить</Button>  \r\n        </FormLayout>\r\n        \r\n        \r\n\t</Panel>\r\n    );\r\n\t\r\n};\r\n\r\nGiveTask.propTypes = {\r\n\t\r\n};\r\n\r\nexport default GiveTask;\r\n","import React,{ useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\r\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\r\nimport Cell from '@vkontakte/vkui/dist/components/Cell/Cell';\r\nimport Search from '@vkontakte/vkui/dist/components/Search/Search'\r\nimport List from '@vkontakte/vkui/dist/components/List/List'\r\nimport Card from '@vkontakte/vkui/dist/components/Card/Card'\r\n\r\nimport { FormLayout } from '@vkontakte/vkui';\r\nimport '../css/AllTask.css'\r\n\r\nfunction isEmpty(object) {\r\n    return !(JSON.stringify(object) == \"{}\");\r\n  }\r\n\r\nconst AllTask= (props) => {\r\n    const thematics = [\r\n        {id: 1, name: \"Программирование\"},\r\n        {id: 2, name: \"Доставка\"},\r\n        {id: 3, name: \"Учёба\"},\r\n        {id: 4, name: \"Рисование\"},\r\n        {id: 5, name: \"Дизайн\"},\r\n        {id: 6, name: \"Пение\"},\r\n        {id: 7, name: \"Готовка\"},\r\n        {id: 8, name: \"Minecraft\"},\r\n        {id: 9, name: \"Общение\"},\r\n        {id: 10, name: \"Прочее\"},\r\n        \r\n      ];\r\n\r\n    const [info,setInfo]=useState({});\r\n    const [search, SetSearch] = useState(\"\");\r\n    const onChange = (e) =>\r\n    {\r\n        SetSearch(e.target.value);        \r\n    } \r\n\r\n    useEffect(() => {\r\n        // props.setPopout(<ScreenSpinner size='large' />);\r\n        // getData(setDostavkaData,'Доставка');\r\n        // getData(setCodingData,'Программирование');\r\n        // // getData(setStudyData,'Учёба');\r\n        // getData(setDesigneData,'Дизайн');\r\n        // getData(setCookData,'Готовка');\r\n        // getData(setProcheeData,'Прочее');\r\n\r\n    //     fetch(\"http://localhost:8000/get_task\")\r\n    //     .then(response => response.json())\r\n    //     .then(result =>{\r\n    //     try{\r\n    //         setData(result);\r\n    //         console.log(result)\r\n    // }catch(err){ console.log(err);\r\n    // }\r\n    // }).catch(err => console.log(err))\r\n        // fetch(\"https://cors-anywhere.herokuapp.com/https://task-today-tpuhack.herokuapp.com/get_task/\").then(response => response.json())\r\n        // .then(result =>{\r\n        //     console.log(result);\r\n        //     setInfo(result);\r\n        //     props.setPopout(null);\r\n        // })\r\n    }, []);\r\n    return(\r\n        <Panel id={props.id}>\r\n            \r\n            <PanelHeader>Все категории</PanelHeader>\r\n            <FormLayout className=\"FormLayoutAllTask\">\r\n                <Search className=\"SearchAllTask\" value={search} onChange={onChange} after={null}/>\r\n                {thematics.length > 0 &&\r\n                    <List>\r\n                        {thematics.filter(({name})=>{return name.toLowerCase().indexOf(search.toLowerCase())>-1}).map((thematic,index)=>\r\n                            <Card size=\"l\" mode=\"shadow\" key={thematic.name} className=\"CardBodyAllTask\" onClick={()=>{\r\n                                props.setDataTransfer(thematic)\r\n                                props.setActivePanelAllTask(\"ThematicsTask\");\r\n                            }}>\r\n                            <Cell expandable >\r\n                              {thematic.name}\r\n                            </Cell>\r\n                        </Card>\r\n                        )}\r\n                        \r\n                    </List>\r\n                }  \r\n            </FormLayout>\r\n            \r\n            \r\n        </Panel>\r\n    );\r\n\t\r\n};\r\n\r\nAllTask.propTypes = {\r\n};\r\n\r\nexport default AllTask;\r\n","import React, {  useState, useEffect } from 'react';\r\n\r\nimport ModalPage from '@vkontakte/vkui/dist/components/ModalPage/ModalPage'\r\nimport ModalRoot from '@vkontakte/vkui/dist/components/ModalRoot/ModalRoot'\r\nimport ModalPageHeader from '@vkontakte/vkui/dist/components/ModalPageHeader/ModalPageHeader'\r\nimport PanelHeaderButton from '@vkontakte/vkui/dist/components/PanelHeaderButton/PanelHeaderButton'\r\nimport FormLayout from '@vkontakte/vkui/dist/components/FormLayout/FormLayout'\r\nimport Button from '@vkontakte/vkui/dist/components/Button/Button';\r\nimport InfoRow from '@vkontakte/vkui/dist/components/InfoRow/InfoRow'\r\n\r\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\r\nimport Icon24Cancel from '@vkontakte/icons/dist/24/cancel';\r\nimport Icon24Done from '@vkontakte/icons/dist/24/done';\r\n\r\nimport '../css/Card_Info.css'\r\nimport { Group, Alert } from '@vkontakte/vkui';\r\n\r\n// function load_info(setPopout,chooseParcels,setParcelsData){\r\n//     fetch(\"https://cors-anywhere.herokuapp.com/https://moyaposylka.ru/api/v1/trackers/\"+chooseParcels[1]+\"/\"+chooseParcels[2])\r\n//     .then(response => response.json())\r\n//     .then(result =>{\r\n//         try{\r\n//             if (result.status) {setParcelsData(null);\r\n//                 console.log(result)}\r\n//                 else{\r\n//                     console.log(result)\r\n// \t\t\t\t\tsetParcelsData(result);\r\n\t\t\t\t\t\r\n//                 }\r\n//         }catch{\r\n//         }\r\n//         setPopout(null);\r\n\r\n//     }).catch(err => console.log(err))\r\n// }\r\n\r\nconst Card_Info = props => {\r\n\r\n\t\r\n    \r\n\r\n    // useEffect(() => {\r\n    //     load_info(props.setPopout,props.chooseParcels,setParcelsData);\r\n    // }, []);\r\n\r\n    // const open_information = () =>{\r\n\t// \tif (props.chooseParcels != null) {\r\n\t// \t\t// console.log(chooseParcels);\r\n\t// \t\tprops.setPopout(<ScreenSpinner size='large' />);\r\n\t// \t\tload_info(props.setPopout,props.chooseParcels,setParcelsData);\r\n\t// \t}\r\n\t\t\r\n\t// }\r\n\r\n    const closeModal = () =>{\r\n\t\tprops.setActiveModal(null);\r\n\t\t// console.log(props.chooseCard);\r\n\t} \r\n\tconst go = (string) =>{\r\n\t\tprops.setActivePanel(string)\r\n\t}\r\n\tconst agree = (item) =>{\r\n\t\tconsole.log(item.categori);\r\n\t\tfetch(\"https://cors-anywhere.herokuapp.com/https://task-today-tpuhack.herokuapp.com/set_new_active_task/?task_id=\"+item._id+\"&id=id\"+props.id_v+\"&category=\"+item.categori)\r\n    \t\t.then(response => response.json())\r\n    \t\t.then(result =>{\r\n        \ttry{\r\n\t\t\t\t// console.log(result);\r\n\t\t\t\tswitch (result) {\r\n\t\t\t\t\tcase 1 : \r\n\t\t\t\t\t\talert(\"Заявка подана\")\r\n\t\t\t\t\t\tprops.setActiveStory(\"Task\")\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 2 : \r\n\t\t\t\t\t\talert(\"Вы уже подали зайвку\")\r\n\t\t\t\t\t\tprops.setActiveStory(\"Task\")\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\talert(\"Error  Заявка неподана\")\r\n\t\t\t\t\t\tprops.setActiveStory(\"Task\")\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\t\r\n\t\t\t\t// if (result == \"1\") {\r\n\t\t\t\t// \t// setActiveStory('Task');\t\t\t\r\n\t\t\t\t// \talert(\"Заявка подана\")\r\n\t\t\t\t// \t// fetch(\"http://localhost:8000/delete_task?task_id=\"+item._id+\"&task_cat=\"+item.categori)\r\n    \t\t\t// \t// \t.then(response => response.json())\r\n    \t\t\t// \t// \t.then(result =>{\r\n\t\t\t\t// \t// \t\tconsole.log(result);\r\n\t\t\t\t// \t// \t});\r\n\t\t\t\t\t\r\n\t\t\t\t// \tprops.setActiveStory(\"Task\")\t\r\n\t\t\t\t// \t// setActiveStory('GiveTask');\t\t\t\t\r\n\t\t\t\t// }else{\r\n\t\t\t\t\t\r\n\t\t\t\t// \talert(\"Eroor Заявка неподана\")\r\n\t\t\t\t// \tprops.setActiveStory(\"Task\")\r\n\t\t\t\t\t\r\n\t\t\t\t// }\r\n\t\t\t\t// console.log(result)\r\n        }catch(err){ alert(\"Eroor Заявка неподана\");\r\n        }\r\n        \r\n\r\n    \t}).catch(err => alert(\"Eroor Заявка неподана\"))\r\n\t}\r\n    return (\r\n        <ModalRoot className=\"ModalRootCard\"  activeModal={props.activeModal}>\r\n\t\t\t\t<ModalPage className=\"ModalPageCrad\" id =\"modal_inform\"\r\n\t\t\t\tonClose={closeModal}\r\n\t\t\t\theader={\r\n\t\t\t\t\t<ModalPageHeader className=\"ModalHaeder\"\r\n\t\t\t\t\t\tleft={<PanelHeaderButton onClick={closeModal}><Icon24Cancel /></PanelHeaderButton>}\r\n              \t\t\t right={<p onClick={()=>{agree(props.chooseCard)}}>Подать заявку</p>} //<PanelHeaderButton onClick={closeModal}><Icon24Done /></PanelHeaderButton>\r\n\t\t\t\t\t>Information</ModalPageHeader>\r\n\t\t\t\t}>\r\n\t\t\t\t\t<FormLayout className=\"FormLayoutModal\">\r\n\t\t\t\t\t\t<Group className=\"GroupModal\">\r\n\t\t\t\t\t\t\t<p className=\"Name\">Название :{props.chooseCard.name}</p>\r\n\t\t\t\t\t\t\t<p>Описание :{props.chooseCard.about}</p>\r\n\t\t\t\t\t\t\t<p>Цена :{props.chooseCard.price}</p>\r\n\t\t\t\t\t\t\t<p>Закончить до :{props.chooseCard.deadline}</p>\r\n\t\t\t\t\t\t</Group>\r\n\t\t\t\t\t</FormLayout>\r\n\t\t\t\t</ModalPage>\r\n\t\t</ModalRoot>\r\n    );\r\n\r\n}\r\n\r\nexport default Card_Info;","import React,{ useState, useEffect, useRef, useCallback } from 'react';\r\nimport io from 'socket.io-client';\r\nimport PropTypes from 'prop-types';\r\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\r\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\r\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\r\nimport CardGrid from '@vkontakte/vkui/dist/components/CardGrid/CardGrid'\r\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\r\nimport Spinner from '@vkontakte/vkui/dist/components/Spinner/Spinner'\r\nimport Button from '@vkontakte/vkui/dist/components/Button/Button';\r\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\r\nimport Cell from '@vkontakte/vkui/dist/components/Cell/Cell';\r\nimport Search from '@vkontakte/vkui/dist/components/Search/Search'\r\nimport List from '@vkontakte/vkui/dist/components/List/List'\r\nimport CardScrol from \"@vkontakte/vkui/dist/components/CardScroll/CardScroll\"\r\nimport Card from '@vkontakte/vkui/dist/components/Card/Card'\r\nimport Div from '@vkontakte/vkui/dist/components/Div/Div';\r\nimport PanelHeaderButton from '@vkontakte/vkui/dist/components/PanelHeaderButton/PanelHeaderButton'\r\nimport Icon24MoreHorizontal from '@vkontakte/icons/dist/24/more_horizontal'\r\n\r\nimport Avatar from '@vkontakte/vkui/dist/components/Avatar/Avatar';\r\nimport { ModalRoot, ModalPage } from '@vkontakte/vkui';\r\nimport { FormLayout } from '@vkontakte/vkui';\r\nimport useTaskHook from '../hooks/useTaskHook';\r\nimport CardInfo from \"./Card_Info\"\r\nimport '../css/ThematicsTask.css'\r\n\r\n\r\n\r\nfunction isEmpty(object) {\r\n    return !(JSON.stringify(object) == \"{}\");\r\n  }\r\nfunction getRandomInt(max) {\r\n  return Math.floor(Math.random() * Math.floor(max));\r\n}\r\n\r\nvar chooseCard = {}\r\nconst ThematicsTask = (props) => {\r\n\r\n    const size_card = [\"l\",\"m\"]\r\n    const [info,setInfo]=useState({});\r\n    const [pageNumber, setPageNumber] = useState(0);\r\n    const [activeModal, setActiveModal] = useState(null);\r\n\r\n    const {loading, error, tasks, hasMore} = useTaskHook(pageNumber,props.dataTransfer.name);\r\n\r\n    const observer = useRef();\r\n    const lastCardElementRef = useCallback(node =>{\r\n        console.log(node);\r\n        if (loading) return\r\n        if (observer.current) observer.current.disconnect();\r\n        observer.current = new IntersectionObserver(entries =>{\r\n            if (entries[0].isIntersecting){\r\n                setPageNumber(prevPageNumber => prevPageNumber + 1);\r\n            }\r\n        })\r\n        if (node) observer.current.observe(node);\r\n    },[loading,hasMore])\r\n    \r\n    return(\r\n        <Panel id={props.id}>\r\n            <PanelHeader\r\n                left={<PanelHeaderButton onClick={() => {props.setActivePanelAllTask(\"AllTask\")}}><Icon24Back/></PanelHeaderButton>}\r\n                right={<PanelHeaderButton><Icon24MoreHorizontal /></PanelHeaderButton>} \r\n        >{props.dataTransfer.name}</PanelHeader> \r\n        <CardInfo activeModal={activeModal} setActiveModal={setActiveModal} \r\n                          chooseCard={chooseCard} setActiveStory={props.setActiveStory} id_v={props.id_v}></CardInfo>\r\n        <div className=\"CardGridThematics\" id=\"grid\" >\r\n            {tasks.map((task,index) => {\r\n                if (tasks.length === index+1){\r\n                    return (\r\n                        <div key={index}>\r\n                        \r\n                        <Card  size=\"l\" mode=\"shadow\" className=\"CardBodyThematics\" onClick={()=>{\r\n                                \r\n                                chooseCard = task;\r\n                                setActiveModal(\"modal_inform\");\r\n                            }}>\r\n                            <Cell>\r\n                                <div className='NameTask'>{task.name}</div>\r\n                                <div className='PriceTask'>Цена: {task.price}</div>\r\n                                <div className='DeadlineTask'>Deadline:{task.deadline}</div>\r\n                            </Cell>\r\n                        </Card>\r\n                        <div ref={lastCardElementRef} style={{background: 'black'}}></div>\r\n                        </div>);\r\n                    \r\n                }else{\r\n                    return (\r\n                        <Card size=\"l\" key={index} mode=\"shadow\" className=\"CardBodyThematics\" onClick={()=>{\r\n                            chooseCard= task;\r\n                            setActiveModal(\"modal_inform\");\r\n                        }}>\r\n                            <Cell>\r\n                                <div className='NameTask'>{task.name}</div>\r\n                                <div className='PriceTask'>Цена: {task.price}</div>\r\n                                <div className='DeadlineTask'>Deadline:{task.deadline}</div>\r\n                            </Cell>\r\n                        </Card>);\r\n                }\r\n                \r\n            })}\r\n            <div>{loading && <Spinner size=\"regular\" style={{ paddingTop: 20,paddingBottom: 20 }} />}</div>\r\n            <div>{error && \"Error\"}</div>\r\n        </div>\r\n        </Panel>\r\n        \r\n    );\r\n\t\r\n};\r\n\r\nThematicsTask.propTypes = {\r\n};\r\n\r\nexport default ThematicsTask;\r\n","import {useEffect, useState} from 'react';\r\n\r\nexport default function useTaskHook(pageNumber,category) {\r\n    \r\n    var skip = 0;\r\n    const limit = 5;\r\n\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(false);\r\n    const [tasks, setTasks] = useState([]);\r\n    const [hasMore, setHasMore] = useState(true);\r\n\r\n    skip += pageNumber*limit;\r\n\r\n    useEffect(()=>{\r\n        if(hasMore){\r\n        setLoading(true);\r\n        setError(false);\r\n        fetch(`https://cors-anywhere.herokuapp.com/https://task-today-tpuhack.herokuapp.com/get_task_v2?skip=${skip}&limit=${limit}&category=${category}`)\r\n        .then(responce => responce.json())\r\n        .then(results => {\r\n            setTasks(prevTaks =>{\r\n                // console.log([...prevTaks, results ]);\r\n                return [...prevTaks, ...results ]\r\n                // return results;\r\n                \r\n            })\r\n            setHasMore(results.length > 0);\r\n            setLoading(false);\r\n            \r\n        }).catch(err =>{\r\n            setError(true);\r\n            return;\r\n        })\r\n    }else{\r\n        setLoading(false);\r\n        setError(false);\r\n    }\r\n\r\n    },[pageNumber]);\r\n    return {loading,error,tasks,hasMore};\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport Epic from '@vkontakte/vkui/dist/components/Epic/Epic'\r\nimport PropTypes from 'prop-types';\r\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\r\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\r\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\r\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\r\nimport Button from '@vkontakte/vkui/dist/components/Button/Button';\r\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\r\nimport Cell from '@vkontakte/vkui/dist/components/Cell/Cell';\r\nimport Header from '@vkontakte/vkui/dist/components/Header/Header'\r\nimport Card from '@vkontakte/vkui/dist/components/Card/Card'\r\nimport PanelHeaderButton from '@vkontakte/vkui/dist/components/PanelHeaderButton/PanelHeaderButton'\r\nimport Icon24MoreHorizontal from '@vkontakte/icons/dist/24/more_horizontal'\r\nimport Div from '@vkontakte/vkui/dist/components/Div/Div';\r\nimport Alert from '@vkontakte/vkui/dist/components/Alert/Alert'\r\nimport Tabbar from '@vkontakte/vkui/dist/components/Tabbar/Tabbar'\r\nimport Icon28NewsfeedOutline from '@vkontakte/icons/dist/28/newsfeed_outline'\r\nimport Icon28UserOutline from '@vkontakte/icons/dist/28/user_outline'\r\nimport Icon28Notifications from '@vkontakte/icons/dist/28/notifications'\r\nimport Icon28More from '@vkontakte/icons/dist/28/more'\r\nimport TabbarItem from '@vkontakte/vkui/dist/components/TabbarItem/TabbarItem'\r\nimport Avatar from '@vkontakte/vkui/dist/components/Avatar/Avatar';\r\nimport { FormLayout, Input } from '@vkontakte/vkui';\r\nimport '../css/Candidates.css'\r\n\r\nconst AgreeWithTask = (props,person,setEmployeeInfo) =>{\r\n  \r\n  fetch(\"https://cors-anywhere.herokuapp.com/https://task-today-tpuhack.herokuapp.com/agree_employer?task_id=\"+props.dataTransfer._id+\"&category=\"+props.dataTransfer.categori+\"&id=\"+person.vk_id).then(response => response.json())\r\n  .then(result =>{\r\n    switch (result) {\r\n      case 1 : \r\n        alert(\"Работник нанят\")\r\n        props.setActivePanelTask(\"Task\")\r\n      break;\r\n      case 0 : \r\n        alert(\"Работник не нанятб попробуйте ещ раз\")\r\n        props.setActivePanelTask(\"Task\")\r\n      break;\r\n      default:\r\n        alert(\"Error  Заявка неподана\")\r\n        props.setActivePanelTask(\"Task\")\r\n      break;\r\n    }\t\r\n  })\r\n}\r\n\r\nconst Candidates = (props) => {\r\n\r\n \r\n  const [EmployeeInfo,setEmployeeInfo]=useState(null);\r\n\r\n  const [activeModal, setActiveModal] = useState(null);\r\n\r\n  useEffect(() => {\r\n      props.setPopout(<ScreenSpinner size='large' />);\r\n      async function GetData(){\r\n        fetch(\"https://cors-anywhere.herokuapp.com/https://task-today-tpuhack.herokuapp.com/get_candidates?task_id=\"+props.dataTransfer._id+\"&category=\"+props.dataTransfer.categori).then(response => response.json())\r\n        .then(result =>{\r\n          console.log(result);\r\n          setEmployeeInfo(result);\r\n          props.setPopout(null);\r\n          \r\n        })\r\n      }\r\n      GetData();\r\n  }, []);\r\n\r\n\r\n\r\n\treturn(\r\n\t\t<Panel id={props.id}>\r\n            \r\n       <PanelHeader\r\n        left={<PanelHeaderButton onClick={() => {props.setActivePanelTask(\"Task\")}}><Icon24Back/></PanelHeaderButton>}\r\n        right={<PanelHeaderButton><Icon24MoreHorizontal /></PanelHeaderButton>} \r\n        \r\n        >Заявки</PanelHeader>\r\n        <FormLayout className=\"FormBody\" >\r\n        {(EmployeeInfo&&EmployeeInfo.length != 0)?(EmployeeInfo.map((person,index) => \r\n            <Card size=\"l\" mode=\"shadow\" key={index} >\r\n                <Cell className=\"CellBody\" key={index}>\r\n                    <div  className=\"DataBody\">\r\n                        <div>{person.vk_id}</div>\r\n                        <div>О работнике : {person.about}</div>\r\n                        <div>Рейтинг {person.rate}</div>\r\n                    </div>\r\n                    <Button  className=\"BT\" onClick={()=>{props.setPopout(<Alert actionsLayout=\"vertical\"\r\n                                                          actions={[{\r\n                                                                      title: 'Да, согласен',\r\n                                                                      autoclose: true,\r\n                                                                      mode: 'destructive',\r\n                                                                      action: () => AgreeWithTask(props,person,setEmployeeInfo),\r\n                                                                    }, {\r\n                                                                      title: 'Отмена',\r\n                                                                      autoclose: true,\r\n                                                                      mode: 'cancel'\r\n                                                                    }]}\r\n                                                                    onClose={() => props.setPopout(null)}>\r\n                                                          <h2>Подтвердите действие</h2>\r\n                                                          <p>Вы уверены, что хотите выбрать этого пользователя на работу?</p>\r\n                                                          </Alert>)\r\n                      }}>Нанять</Button>\r\n                </Cell>\r\n            </Card>\r\n        )):((EmployeeInfo == \"0\")?(<Div>\r\n          Пока тут пусто\r\n        </Div>):(<Div>Заявок пока нету</Div>))\r\n            \r\n\r\n        }\r\n        </FormLayout>\r\n          \r\n    </Panel>\r\n\t\t\r\n\t\r\n\t);\r\n};\r\n\r\nCandidates.propTypes = {\r\n};\r\n\r\nexport default Candidates;\r\n","import React, { useState, useEffect } from 'react';  //eslint-disable-next-line\r\nimport io from 'socket.io-client';\r\nimport Epic from '@vkontakte/vkui/dist/components/Epic/Epic'\r\nimport PropTypes from 'prop-types';\r\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\r\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\r\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\r\nimport Button from '@vkontakte/vkui/dist/components/Button/Button';\r\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\r\nimport Cell from '@vkontakte/vkui/dist/components/Cell/Cell';\r\nimport Header from '@vkontakte/vkui/dist/components/Header/Header'\r\nimport Card from '@vkontakte/vkui/dist/components/Card/Card'\r\nimport PanelHeaderButton from '@vkontakte/vkui/dist/components/PanelHeaderButton/PanelHeaderButton'\r\nimport Icon24MoreHorizontal from '@vkontakte/icons/dist/24/more_horizontal'\r\nimport Input from '@vkontakte/vkui/dist/components/Input/Input'\r\nimport Div from '@vkontakte/vkui/dist/components/Div/Div';\r\nimport Tabbar from '@vkontakte/vkui/dist/components/Tabbar/Tabbar'\r\nimport Icon28NewsfeedOutline from '@vkontakte/icons/dist/28/newsfeed_outline'\r\nimport Icon28UserOutline from '@vkontakte/icons/dist/28/user_outline'\r\nimport Icon28Notifications from '@vkontakte/icons/dist/28/notifications'\r\nimport Icon28More from '@vkontakte/icons/dist/28/more'\r\nimport TabbarItem from '@vkontakte/vkui/dist/components/TabbarItem/TabbarItem'\r\nimport Avatar from '@vkontakte/vkui/dist/components/Avatar/Avatar';\r\nimport { FormLayout } from '@vkontakte/vkui';\r\n\r\nimport '../css/Chat.css'\r\n\r\n\r\nconst Chat = (props) => {\r\n\r\n \r\n  const [activeInfo,setActiveInfo]=useState({});\r\n  var socket = io.connect('http://localhost:8000/chats');\r\n  const [dataMessage, setDataMessage] = useState(null);\r\n  // socket.emit('join',{room : '1_room'});\r\n  // socket.on('join_good', (msg) =>{\r\n  //   console.log(msg);\r\n  // })\r\n  socket.on('message', function (data) {\r\n    // console.log(data);\r\n    setDataMessage(data);\r\n    socket.emit('my other event', { my: 'data' });\r\n  });\r\n  useEffect(() => {\r\n      props.setPopout(<ScreenSpinner size='large' />);\r\n      async function GetData(){\r\n        // fetch(\"https://localhost:8000/chats\").then(response => response.json())\r\n        // .then(result =>{\r\n        //   console.log(result);\r\n        // })\r\n        // // props.setPopout(null);\r\n      }\r\n      props.setPopout(null);\r\n      // socket.on();\r\n      GetData();\r\n    \r\n      \r\n  }, []);\r\n\r\n\r\n\r\n\treturn(\r\n\t\t<Panel id={props.id}>\r\n            \r\n       <PanelHeader\r\n        right={<PanelHeaderButton><Icon24MoreHorizontal /></PanelHeaderButton>} \r\n      >Мои Чаты</PanelHeader>\r\n          <FormLayout>\r\n            {dataMessage && dataMessage.map(item =>\r\n              <div>\r\n                {item.my}\r\n              </div>\r\n            )\r\n              \r\n\r\n            }\r\n            \r\n        </FormLayout>\r\n        <div className=\"div_down\"> \r\n              <Input className=\"Input_Chats\" id=\"MessageInput\"  type=\"text\" defaultValue=\"\" status=\"default\"/> \r\n              <Button className=\"Button_Chats\" onClick={()=>{\r\n                                          socket.emit('add', { my: document.getElementById(\"MessageInput\").value });\r\n              }}>Отправить</Button>\r\n            </div>\r\n    </Panel>\r\n\t\t\r\n\t\r\n\t);\r\n};\r\n\r\nChat.propTypes = {\r\n};\r\n\r\nexport default Chat;\r\n","import React, { useState, useEffect } from 'react';\nimport bridge from '@vkontakte/vk-bridge';\nimport View from '@vkontakte/vkui/dist/components/View/View';\nimport io from 'socket.io-client';\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport Tabbar from '@vkontakte/vkui/dist/components/Tabbar/Tabbar'\nimport Icon28NewsfeedOutline from '@vkontakte/icons/dist/28/newsfeed_outline'\nimport Epic from '@vkontakte/vkui/dist/components/Epic/Epic'\nimport Icon28UserOutline from '@vkontakte/icons/dist/28/user_outline'\nimport Icon28Notifications from '@vkontakte/icons/dist/28/notifications'\nimport Icon28More from '@vkontakte/icons/dist/28/more'\nimport Icon28AddOutline from '@vkontakte/icons/dist/28/add_outline';\nimport Icon24Chats from '@vkontakte/icons/dist/24/chats';\nimport TabbarItem from '@vkontakte/vkui/dist/components/TabbarItem/TabbarItem'\n\nimport '@vkontakte/vkui/dist/vkui.css';\n\nimport FirstConnect from './panels/FirstConnect';\nimport Task from './panels/Task';\nimport Folowers from './panels/Folowers'\nimport Profile from './panels/Profile'\nimport GiveTask from './panels/GiveTask'\nimport Notifications from './panels/Notifications'\nimport AllTask from './panels/AllTask'\nimport ThematicsTask from './panels/ThematicsTask'\nimport Candidates from './panels/Candidates';\nimport Chats from './panels/Chats'\n\nvar chooseCard = []\nvar url = new URL(window.location.href);\nconst id_v = url.searchParams.get(\"vk_user_id\");\n// const vk_app_id = url.searchParams.get(\"vk_app_id\");\n// const auth_key = url.searchParams.get(\"vk_auth_key\")\nconst sign = url.searchParams.get(\"sign\");\n// console.log(url)\n// console.log(\"SIGN \"+sign);\n// var socket = io.connect('http://localhost:8000');\n// socket.emit(\"join\",{id_v : id_v, url:url.href, sign: sign})\nconst App = () => {\n\t//   console.log(url.searchParams.get(\"access_token\"));\n\tconst [activePanelTask, setActivePanelTask] = useState(\"Task\");\n\tconst [activePanelAllTask, setActivePanelAllTask] = useState(\"AllTask\");\n\tconst [dataTransfer, setDataTransfer] = useState(null);\n\t// const [dataTransfer1, setDataTransfer1] = useState(null);\n\t// const [userData, setUserData] = useState(null);\n\tconst [activeStory, setActiveStory] = useState(null);\n\tconst [fetchedUser, setUser] = useState(null); \n\tconst [data, setData] = useState(null);\n\tconst [popout, setPopout] = useState(null); //<ScreenSpinner size='large' />\n\n\t// socket.on('user_not_reg',(data)=>{\n\t// \tsetActiveStory(\"FirstConnect\");\n\t// })\n\tuseEffect(() => {\n\t\tbridge.subscribe(({ detail: { type, data }}) => {\n\t\t\tif (type === 'VKWebAppUpdateConfig') {\n\t\t\t\tconst schemeAttribute = document.createAttribute('scheme');\n\t\t\t\tschemeAttribute.value = 'client_light'; // data.scheme ? data.scheme : \n\t\t\t\tdocument.body.attributes.setNamedItem(schemeAttribute);\n\t\t\t}\n\t\t});\n\t\tasync function fetchData() {\n\t\t\tconst user = await bridge.send('VKWebAppGetUserInfo');\n\t\t\tsetUser(user);\n\t\t\tlet response = await fetch(\n\t\t\t\t\"https://cors-anywhere.herokuapp.com/https://task-today-tpuhack.herokuapp.com/first_connect?id=id\" +\n\t\t\t\t  id_v\n\t\t\t  );\n\t\t\t  let result = await response.json();\n\t\t\t  // alert(result);\n\t\t\t  if (result == \"1\") {\n\t\t\t\tsetActiveStory(\"Task\");\n\t\t\t\t// setActiveStory(\"Chats\");\n\t\t\t\t// setActiveStory('AllTask');\n\t\t\t\t// setActiveStory('GiveTask');\n\t\t\t  } else {\n\t\t\t\tsetActiveStory(\"FirstConnect\");\n\t\t\t  }\n\t\t\t// setPopout(null);\n\t\t}\n\t\tfetchData();\n\t\t// console.log(id_v)\n\t\t// fetchData2();\n\t\t// fetch(\"https://cors-anywhere.herokuapp.com/https://task-today-tpuhack.herokuapp.com/first_connect?id=id\"+id_v)\n    \t// \t.then(response => response.json())\n    \t// \t.then(result =>{\n        // \ttry{\n\t\t// \t\tif (result == \"1\") {\n\t\t// \t\t\tsetActiveStory('Task');\t\t\t\n\t\t// \t\t\t// setActiveStory('AllTask');\t\n\t\t// \t\t\t// setActiveStory('GiveTask');\t\t\t\t\n\t\t// \t\t}else{\n\t\t\t\t\t\n\t\t// \t\t\tsetActiveStory('FirstConnect');\n\t\t\t\t\t\n\t\t// \t\t}\n\t\t// \t\tconsole.log(result)\n        // }catch(err){ console.log(err);\n\t\t// }\n\t\t// fetch(\"https://cors-anywhere.herokuapp.com/https://task-today-tpuhack.herokuapp.com/get_employee?id=id\"+id_v).then(response => response.json())\n    \t// .then(result =>{\n        // console.log(result);\n        // setData(result);\n    \t// })\n        // setPopout(null);\n\n\t\t// }).catch(err => console.log(err))\n\t\n\t}, []);\n\n\tconst next = e =>{\n\t\tsetActiveStory(e.currentTarget.dataset.story)\n\t}\n\n\treturn (\n\t\t\n\t\t<Epic activeStory={activeStory} tabbar={activeStory != \"FirstConnect\" ?(\n\t\t\t<Tabbar>\n          <TabbarItem\n            onClick={next}\n            selected={activeStory}\n\t\t\tdata-story=\"Task\"\n\t\t\t\n            label={data?data.count_task:null}\n            text=\"Задания\"\n          ><Icon28NewsfeedOutline /></TabbarItem>\n          {/* <TabbarItem\n            onClick={next}\n            selected={activeStory}\n            data-story=\"Chats\"\n            text=\"Чат\"\n          ><Icon24Chats /></TabbarItem> */}\n          <TabbarItem\n            onClick={next}\n            selected={activeStory}\n            data-story=\"Profile\"\n            text=\"Профиль\"\n          ><Icon28UserOutline /></TabbarItem>\n          <TabbarItem\n            onClick={next}\n            selected={activeStory}\n            data-story=\"GiveTask\"\n            text=\"Дать задание\"\n          ><Icon28AddOutline /></TabbarItem>\n          <TabbarItem\n            onClick={next}\n            selected={activeStory}\n            data-story=\"AllTask\"\n            text=\"Все задания\"\n          ><Icon28More /></TabbarItem>\n        </Tabbar>):(<div></div>)\n\t\t}>\t\n\t\t\t<View id=\"FirstConnect\" activePanel='FirstConnect' popout={popout}>\n\t\t\t\t<FirstConnect id='FirstConnect' fetchedUser={fetchedUser} setActiveStory={setActiveStory} id_v={id_v} setPopout={setPopout}>\t</FirstConnect>\n\t\t\t</View>\n\t\t\t<View id=\"Task\" activePanel={activePanelTask} popout={popout}>\n\t\t\t\t<Task id='Task' fetchedUser={fetchedUser} id_v={id_v} setActivePanelTask = {setActivePanelTask} setDataTransfer={setDataTransfer} setPopout={setPopout}/>\n\t\t\t\t<Candidates id='Candidates' setActivePanelTask = {setActivePanelTask} dataTransfer = {dataTransfer} setPopout={setPopout} />\n\t\t\t\t\n\t\t\t</View>\n\t\t\t<View id=\"Chats\" activePanel=\"Chats\" popout={popout}>\n\t\t\t\t<Chats id='Chats' fetchedUser={fetchedUser} setPopout={setPopout} setActiveStory={setActiveStory}/>\n\t\t\t</View>\n\t\t\t<View id=\"Profile\" activePanel=\"Profile\" popout={popout}>\n\t\t\t\t<Profile id='Profile' fetchedUser={fetchedUser} id_v={id_v} setPopout={setPopout}/>\n\t\t\t</View>\n\t\t\t<View id=\"GiveTask\" activePanel=\"GiveTask\" popout={popout}>\n\t\t\t\t<GiveTask id='GiveTask' fetchedUser={fetchedUser} id_v={id_v} setPopout={setPopout} setActiveStory={setActiveStory}/>\n\t\t\t</View>\n\t\t\t<View id=\"AllTask\" activePanel={activePanelAllTask} popout={popout}>\n\t\t\t\t<AllTask id='AllTask' fetchedUser={fetchedUser}  setActiveStory={setActiveStory} setActivePanelAllTask={setActivePanelAllTask}   \n\t\t\t\t\t\tsetDataTransfer={setDataTransfer} id_v={id_v} setPopout={setPopout}/>\n\t\t\t\t<ThematicsTask id=\"ThematicsTask\" setActivePanelAllTask={setActivePanelAllTask} \n\t\t\t\t\t\t\t   id_v={id_v} setActiveStory={setActiveStory} dataTransfer = {dataTransfer} \n\t\t\t\t\t\t\t   dataTransfer = {dataTransfer} setPopout={setPopout}></ThematicsTask>\n\t\t\t</View>\n\n\t\t</Epic>\n\t\t\n\t);\n}\n\nexport default App;\n\n","import \"core-js/features/map\";\nimport \"core-js/features/set\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport bridge from \"@vkontakte/vk-bridge\";\nimport App from \"./App\";\n\n// Init VK  Mini App\nbridge.send(\"VKWebAppInit\");\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nif (process.env.NODE_ENV === \"development\") {\n}\n"],"sourceRoot":""}