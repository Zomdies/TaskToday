{"version":3,"sources":["panels/FirstConnect.js","panels/Task.js","panels/Profile.js","panels/GiveTask.js","panels/AllTask.js","panels/Card_Info.js","panels/ThematicsTask.js","hooks/useTaskHook.js","panels/Candidates.js","panels/Chats.js","App.js","index.js"],"names":["FirstConnect","props","thematics","id","name","setPopout","useState","search","SetSearch","className","top","placeholder","size","onClick","fetch","id_v","document","getElementById","value","then","response","json","result","setActiveStory","window","location","reload","console","log","err","catch","createPerson","onChange","e","target","after","length","filter","toLowerCase","indexOf","map","thematic","key","Task","cat","activeInfo","setActiveInfo","awaitInfo","setAwaitInfo","employerInfo","setemployerInfo","userInfo","setUserInfo","slideIndex","setSlideIndex","useEffect","a","scrollTo","GetData","GetData2","GetData3","GetData4","right","selected","active_task","employer_task","await_task","align","slideWidth","slideIndex1","setTimeout","category","index","style","padding","mode","item","index2","open","id_employer","indicator","deadline","expandable","setDataTransfer","setActivePanelTask","Profile","data","setData","before","src","fetchedUser","photo_200","first_name","last_name","about","aside","backgroundImage","height","display","alignItems","justifyContent","paddingBottom","borderRadius","color","GiveTask","createTask","deadLine","price","find","alert","result2","type","defaultValue","status","AllTask","setActivePanelAllTask","Card_Info","closeModal","setActiveModal","activeModal","onClose","header","left","chooseCard","categori","_id","ThematicsTask","pageNumber","setPageNumber","skip","loading","setLoading","error","setError","tasks","setTasks","hasMore","setHasMore","responce","results","prevTaks","useTaskHook","dataTransfer","observer","useRef","lastCardElementRef","useCallback","node","current","disconnect","IntersectionObserver","entries","isIntersecting","prevPageNumber","observe","task","ref","background","paddingTop","Candidates","EmployeeInfo","setEmployeeInfo","person","vk_id","rate","actionsLayout","actions","title","autoclose","action","AgreeWithTask","Chat","url","URL","href","searchParams","get","App","activePanelTask","activePanelAllTask","activeStory","setUser","countActiveTask","setCountActiveTask","popout","bridge","send","user","subscribe","detail","schemeAttribute","createAttribute","body","attributes","setNamedItem","fetchData2","next","currentTarget","dataset","story","tabbar","data-story","label","text","activePanel","Chats","ReactDOM","render"],"mappings":"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","file":"static/js/main.8889b041.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\r\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\r\nimport Textarea from '@vkontakte/vkui/dist/components/Textarea/Textarea'\r\nimport Button from '@vkontakte/vkui/dist/components/Button/Button';\r\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\r\nimport Cell from '@vkontakte/vkui/dist/components/Cell/Cell';\r\nimport Div from '@vkontakte/vkui/dist/components/Div/Div';\r\nimport Avatar from '@vkontakte/vkui/dist/components/Avatar/Avatar';\r\nimport List from \"@vkontakte/vkui/dist/components/List/List\"\r\nimport Checkbox from '@vkontakte/vkui/dist/components/Checkbox/Checkbox'\r\nimport Search from \"@vkontakte/vkui/dist/components/Search/Search\"\r\n\r\n\r\nimport '../css/FirstConnect.css'\r\nimport { FormLayout } from '@vkontakte/vkui';\r\n\r\nconst createPerson = (props) =>{\r\n    fetch(\"https://cors-anywhere.herokuapp.com/https://task-today-tpuhack.herokuapp.com/create_employee?id=id\"+props.id_v+\"&phone=892346750213&\"+\r\n    \"about=\"+document.getElementById(\"About\").value)\r\n    \t\t.then(response => response.json())\r\n    \t\t.then(result =>{\r\n        \ttry{\r\n\t\t\t\tif (result == \"1\") {\r\n\t\t\t\t\tprops.setActiveStory('Task')\r\n\t\t\t\t}else{\r\n                    props.setActiveStory('FirstConnect')\r\n                }\r\n                window.location.reload();\r\n                props.setActiveStory('Task')\r\n                console.log(\"GO HOME\"); \r\n        }catch(err){ console.log(err);\r\n        }\r\n\r\n    \t}).catch(err => console.log(err))\r\n\r\n}\r\n\r\nconst FirstConnect = (props) => {        \r\n\r\n    const thematics = [\r\n        {id: 1, name: \"Программирование\"},\r\n        {id: 2, name: \"Доставка\"},\r\n        {id: 3, name: \"Учёба\"},\r\n        {id: 4, name: \"Рисование\"},\r\n        {id: 5, name: \"Дизайн\"},\r\n        {id: 6, name: \"Пение\"},\r\n        {id: 7, name: \"Готовка\"},\r\n        {id: 8, name: \"Minecraft\"},\r\n        {id: 9, name: \"Общение\"},\r\n        {id: 10, name: \"Прочее\"},\r\n        \r\n      ];\r\n    props.setPopout(null);\r\n    const [search, SetSearch] = useState(\"\");\r\n\r\n    const onChange = (e) =>\r\n    {\r\n        SetSearch(e.target.value);        \r\n    }   \r\n\r\n    return(\r\n        <Panel id={props.id}>\r\n        \r\n\t\t<PanelHeader className='PanelHeader'>TaskToday</PanelHeader>\r\n        <FormLayout>\r\n            <div className=\"MainText\">\r\n                <div>Добро пожаловать</div>\r\n\t\t        <div>Для удачного использования введите некоторую информацию и разрешите уведомления</div>\r\n            </div>\r\n            <Textarea className=\"About\" id=\"About\" top=\"О себе\" placeholder=\"Расскажите что-нибудь c:\"></Textarea>\r\n            <Button size=\"xl\" onClick={()=>{createPerson(props)}}>Закончить</Button>            \r\n            <Search top=\"Чем вы будете заниматься?\" value={search} onChange={onChange} after={null}/>\r\n                {thematics.length > 0 &&\r\n                    <List>\r\n                        {thematics.filter(({name})=>{return name.toLowerCase().indexOf(search.toLowerCase())>-1}).map(thematic => <Checkbox key={thematic.id}>{thematic.name}</Checkbox>)}\r\n                    </List>\r\n                }            \r\n            \r\n        </FormLayout>\r\n        \r\n        \r\n\t</Panel>\r\n    );\r\n\t\r\n};\r\n\r\nFirstConnect.propTypes = {\r\n\t\r\n};\r\n\r\nexport default FirstConnect;\r\n","import React, { useState, useEffect } from 'react';  //eslint-disable-next-line\r\nimport Epic from '@vkontakte/vkui/dist/components/Epic/Epic'\r\nimport PropTypes from 'prop-types';\r\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\r\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\r\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\r\nimport ReactSwipe from 'react-swipe';\r\nimport Button from '@vkontakte/vkui/dist/components/Button/Button';\r\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\r\nimport Cell from '@vkontakte/vkui/dist/components/Cell/Cell';\r\nimport Tabs from '@vkontakte/vkui/dist/components/Tabs/Tabs'\r\nimport TabsItem from '@vkontakte/vkui/dist/components/TabsItem/TabsItem'\r\nimport Gallery from '@vkontakte/vkui/dist/components/Gallery/Gallery'\r\nimport Header from '@vkontakte/vkui/dist/components/Header/Header'\r\nimport Card from '@vkontakte/vkui/dist/components/Card/Card'\r\nimport Separator from '@vkontakte/vkui/dist/components/Separator/Separator'\r\nimport PanelHeaderButton from '@vkontakte/vkui/dist/components/PanelHeaderButton/PanelHeaderButton'\r\nimport Icon24MoreHorizontal from '@vkontakte/icons/dist/24/more_horizontal'\r\nimport Div from '@vkontakte/vkui/dist/components/Div/Div';\r\nimport Counter from '@vkontakte/vkui/dist/components/Counter/Counter'\r\nimport List from '@vkontakte/vkui/dist/components/List/List';\r\nimport Tabbar from '@vkontakte/vkui/dist/components/Tabbar/Tabbar'\r\nimport Icon28NewsfeedOutline from '@vkontakte/icons/dist/28/newsfeed_outline'\r\nimport Icon28UserOutline from '@vkontakte/icons/dist/28/user_outline'\r\nimport Icon28Notifications from '@vkontakte/icons/dist/28/notifications'\r\nimport Icon28More from '@vkontakte/icons/dist/28/more'\r\nimport TabbarItem from '@vkontakte/vkui/dist/components/TabbarItem/TabbarItem'\r\nimport Avatar from '@vkontakte/vkui/dist/components/Avatar/Avatar';\r\nimport { FormLayout } from '@vkontakte/vkui';\r\nimport '../css/Task.css'\r\n\r\nfunction isEmpty(object) {\r\n    return JSON.stringify(object) == \"{}\";\r\n  }\r\n  \r\n\r\nconst Task = (props) => {\r\n\r\n  const cat = ['Программирование','Доставка','Учёба','Рисование','Дизайн','Пение','Готовка','Minecraft','Общение','Прочее'];\r\n \r\n  const [activeInfo,setActiveInfo]=useState({});\r\n  const [awaitInfo, setAwaitInfo] = useState({});\r\n  const [employerInfo, setemployerInfo] = useState({});\r\n  const [userInfo, setUserInfo] = useState(null);\r\n  const [activeModal, setActiveModal] = useState(null);\r\n  const [slideIndex, setSlideIndex] = useState(0);\r\n  const [fun,setFun] = useState(null);\r\n\r\n  useEffect(() => {\r\n      window.scrollTo(0, 0);\r\n      props.setPopout(<ScreenSpinner size='large' />);\r\n      async function GetData(){\r\n        fetch(\"https://cors-anywhere.herokuapp.com/https://task-today-tpuhack.herokuapp.com/get_active_task?id=id\"+props.id_v).then(response => response.json())\r\n        .then(result =>{\r\n          // console.log(result);\r\n          setActiveInfo(result);\r\n        })\r\n      }\r\n      async function GetData2(){\r\n        fetch(\"https://cors-anywhere.herokuapp.com/https://task-today-tpuhack.herokuapp.com/get_await_task?id=id\"+props.id_v).then(response => response.json())\r\n        .then(result =>{\r\n          // console.log(result);\r\n          setAwaitInfo(result);\r\n        })\r\n      }\r\n      async function GetData3(){\r\n        fetch(\"https://cors-anywhere.herokuapp.com/https://task-today-tpuhack.herokuapp.com/get_employer_task?id=id\"+props.id_v).then(response => response.json())\r\n        .then(result =>{\r\n          // console.log(result);\r\n          setemployerInfo(result);\r\n          props.setPopout(null);\r\n        })\r\n      }\r\n      async function GetData4(){\r\n        fetch(\"https://cors-anywhere.herokuapp.com/https://task-today-tpuhack.herokuapp.com/get_employee?id=id\"+props.id_v).then(response => response.json())\r\n        .then(result =>{\r\n          // console.log(result);\r\n          setUserInfo(result)\r\n          // props.setPopout(null);\r\n        })\r\n      }\r\n      GetData();\r\n      GetData2();\r\n      GetData3();\r\n      GetData4();\r\n      \r\n  }, []);\r\n\r\n\r\n\r\n\treturn(\r\n      <Panel id={props.id}>\r\n            \r\n            <PanelHeader\r\n             right={<PanelHeaderButton><Icon24MoreHorizontal /></PanelHeaderButton>} \r\n           >Задания</PanelHeader>\r\n           <Tabs className=\"TabsTask\">\r\n             <TabsItem onClick={()=>{setSlideIndex(0); window.scrollTo(0, 0);} } \r\n                        selected={slideIndex===0?1:null} after={<Counter size=\"s\">{userInfo?userInfo.active_task.length:0}</Counter>} >Активные</TabsItem>\r\n             <TabsItem onClick={()=>{setSlideIndex(1); window.scrollTo(0, 0);}} \r\n                        selected={slideIndex==1?1:null} after={<Counter size=\"s\">{userInfo?userInfo.employer_task.length:0}</Counter>}>Мои</TabsItem>\r\n             <TabsItem onClick={()=>{setSlideIndex(2); window.scrollTo(0, 0);}} \r\n                        selected={slideIndex==2?1:null} after={<Counter size=\"s\">{userInfo?userInfo.await_task.length:0}</Counter>}>В ожидании</TabsItem>\r\n             \r\n             {/* <TabsItem onClick={()=>{fun.slide(0,0); setSlideIndex(0);} } selected={slideIndex===0?slideIndex+1:null}>Активные</TabsItem>\r\n             <TabsItem onClick={()=>{fun.slide(1,0); setSlideIndex(1)}} selected={slideIndex==1?slideIndex:null}>Ожидают подтверждения</TabsItem>\r\n             <TabsItem onClick={()=>{fun.slide(2,0); setSlideIndex(2)}} selected={slideIndex==2?slideIndex:null}>Мои</TabsItem> */}\r\n             {/* <TabsItem onClick={()=>{setSlideIndex(0); props.setActivePanelTask(\"Active\")}} selected={slideIndex===0?slideIndex+1:null}>Активные</TabsItem>\r\n             <TabsItem onClick={()=>{setSlideIndex(1); props.setActivePanelTask(\"Await\")}} selected={slideIndex==1?slideIndex:null}>Ожидают подтверждения</TabsItem>\r\n             <TabsItem onClick={()=>{setSlideIndex(2); props.setActivePanelTask(\"My\")}} selected={slideIndex==2?slideIndex:null}>Мои</TabsItem> */}\r\n           </Tabs>\r\n           <Separator />\r\n           {/* <ReactSwipe className=\"GalleryBody\" ref={el => (setFun(el))}> */}\r\n           <Gallery className=\"GalleryBody\" align='center' slideWidth=\"100%\" slideIndex={slideIndex} onChange={(slideIndex1)=> {setSlideIndex(slideIndex1); setTimeout(window.scrollTo(0, 0),5000);}} >\r\n           {/* <FormLayout> */}\r\n           <div className=\"ListTask\">\r\n           {activeInfo && \r\n                 cat.map((category,index) =>\r\n                 activeInfo && activeInfo[category] && \r\n                 <Div key={index} style={{padding : 0}}>\r\n                   {activeInfo && activeInfo[category].length != 0 && <Header mode=\"secondary\">{category}</Header> }\r\n                   {activeInfo && activeInfo[category] && activeInfo[category].map((item,index2) => <Div key={index+index2}style={{padding : 0}}>\r\n                   {/* <Cell className=\"CellBodyTask\" indicator={item.deadline} expandable >\r\n                             {item.name}\r\n                           </Cell> */}\r\n                       <Card size=\"l\" mode=\"shadow\" className=\"CardBody\" onClick={()=>{\r\n                                                                    window.open(`https://vk.com/${item.id_employer}`)\r\n                                                                    // props.setDataTransfer(item);\r\n                                                                    // props.setActivePanelTask(\"Chats\");\r\n                       }}>\r\n                           <Cell indicator={item.deadline} expandable >\r\n                             {item.name}\r\n                           </Cell>\r\n                       </Card>\r\n                   </Div>)}\r\n                 </Div>)\r\n               }\r\n           </div>\r\n           <div className=\"ListTask\">          \r\n               {employerInfo && \r\n                 cat.map((category,index) =>\r\n                   employerInfo && employerInfo[category] && \r\n                 <Div key={index}style={{padding : 0}}>\r\n                   {employerInfo && employerInfo[category].length != 0 && <Header mode=\"secondary\">{category}</Header> }\r\n                   {employerInfo && employerInfo[category] && employerInfo[category].map((item,index2) => <Div key={index+index2}style={{padding : 0}}>\r\n                   {/* <Cell className=\"CellBodyTask\" indicator={item.deadline} expandable onClick={()=>{props.setDataTransfer(item)\r\n                                                                  props.setActivePanelTask(\"Candidates\")}}>\r\n                             {item.name}\r\n                           </Cell> */}\r\n                       <Card size=\"l\" mode=\"shadow\" className=\"CardBody\" onClick={()=>{props.setDataTransfer(item)\r\n                                                                  props.setActivePanelTask(\"Candidates\")}}>\r\n                           <Cell indicator={item.deadline} expandable >\r\n                             {item.name}\r\n                           </Cell>\r\n                       </Card>\r\n                   </Div>)}\r\n                 </Div>)\r\n               }\r\n           </div>\r\n           <div className=\"ListTask\">\r\n           {awaitInfo && \r\n                 cat.map((category,index) =>\r\n                   awaitInfo && awaitInfo[category] && \r\n                 <Div key={index}style={{padding : 0}}>\r\n                   {awaitInfo && awaitInfo[category].length != 0 && <Header mode=\"secondary\">{category}</Header> }\r\n                   {awaitInfo && awaitInfo[category] && awaitInfo[category].map((item,index2) => <Div key={index+index2}style={{padding : 0}}>\r\n                   {/* <Cell className=\"CellBodyTask\" indicator={item.deadline} expandable >\r\n                             {item.name}\r\n                           </Cell> */}\r\n                       <Card size=\"l\" mode=\"shadow\" className=\"CardBody\" >\r\n                           <Cell indicator={item.deadline} expandable >\r\n                             {item.name}\r\n                           </Cell>\r\n                       </Card>\r\n                   </Div>)}\r\n                 </Div>)\r\n               }\r\n           </div>\r\n             {/* <List className=\"ListTask\">         \r\n               {activeInfo && \r\n                 cat.map((category,index) =>\r\n                 activeInfo && activeInfo[category] && \r\n                 <Div key={index} style={{padding : 0}}>\r\n                   {activeInfo && activeInfo[category].length != 0 && <Header mode=\"secondary\">{category}</Header> }\r\n                   {activeInfo && activeInfo[category] && activeInfo[category].map((item,index2) => <Div key={index+index2}style={{padding : 0}}>\r\n                       <Card size=\"l\" mode=\"shadow\" className=\"CardBody\">\r\n                           <Cell indicator={item.deadline} expandable >\r\n                             {item.name}\r\n                           </Cell>\r\n                       </Card>\r\n                   </Div>)}\r\n                 </Div>)\r\n               }\r\n               <div className=\"div_dop\"/>\r\n             </List>\r\n             <List className=\"ListTask\">         \r\n               {awaitInfo && \r\n                 cat.map((category,index) =>\r\n                   awaitInfo && awaitInfo[category] && \r\n                 <Div key={index}style={{padding : 0}}>\r\n                   {awaitInfo && awaitInfo[category].length != 0 && <Header mode=\"secondary\">{category}</Header> }\r\n                   {awaitInfo && awaitInfo[category] && awaitInfo[category].map((item,index2) => <Div key={index+index2}style={{padding : 0}}>\r\n                       <Card size=\"l\" mode=\"shadow\" className=\"CardBody\" >\r\n                           <Cell indicator={item.deadline} expandable >\r\n                             {item.name}\r\n                           </Cell>\r\n                       </Card>\r\n                   </Div>)}\r\n                 </Div>)\r\n               }\r\n               <div className=\"div_dop\"/>\r\n             </List>\r\n             <List className=\"ListTask\">         \r\n               {employerInfo && \r\n                 cat.map((category,index) =>\r\n                   employerInfo && employerInfo[category] && \r\n                 <Div key={index}style={{padding : 0}}>\r\n                   {employerInfo && employerInfo[category].length != 0 && <Header mode=\"secondary\">{category}</Header> }\r\n                   {employerInfo && employerInfo[category] && employerInfo[category].map((item,index2) => <Div key={index+index2}style={{padding : 0}}>\r\n                       <Card size=\"l\" mode=\"shadow\" className=\"CardBody\" onClick={()=>{props.setDataTransfer(item)\r\n                                                                  props.setActivePanelTask(\"Candidates\")}}>\r\n                           <Cell indicator={item.deadline} expandable >\r\n                             {item.name}\r\n                           </Cell>\r\n                       </Card>\r\n                   </Div>)}\r\n                 </Div>)\r\n               }\r\n               <div className=\"div_dop\"/>\r\n             </List> */}\r\n             \r\n             {/* </FormLayout> */}\r\n           </Gallery>\r\n           {/* </ReactSwipe> */}\r\n               {/* <FormLayout>\r\n               <Group header={<Header mode=\"primary\">Активные</Header>}>         \r\n               {activeInfo && \r\n                 cat.map(category =>\r\n                 activeInfo && activeInfo[category] && \r\n                 <Div key={category}style={{padding : 0}}>\r\n                   {activeInfo && activeInfo[category].length != 0 && <Header mode=\"secondary\">{category}</Header> }\r\n                   {activeInfo && activeInfo[category] && activeInfo[category].map(item => <Div key={category+item.name}style={{padding : 0}}>\r\n                       <Card size=\"l\" mode=\"shadow\" className=\"CardBody\">\r\n                           <Cell indicator={item.deadline} expandable >\r\n                             {item.name}\r\n                           </Cell>\r\n                       </Card>\r\n                   </Div>)}\r\n                 </Div>)\r\n               }\r\n             </Group>\r\n             <Group header={<Header mode=\"primary\">Ожидают подтверждения</Header>}>         \r\n               {awaitInfo && \r\n                 cat.map(category =>\r\n                   awaitInfo && awaitInfo[category] && \r\n                 <Div key={category}style={{padding : 0}}>\r\n                   {awaitInfo && awaitInfo[category].length != 0 && <Header mode=\"secondary\">{category}</Header> }\r\n                   {awaitInfo && awaitInfo[category] && awaitInfo[category].map(item => <Div key={category+item.name}style={{padding : 0}}>\r\n                       <Card size=\"l\" mode=\"shadow\" className=\"CardBody\" >\r\n                           <Cell indicator={item.deadline} expandable >\r\n                             {item.name}\r\n                           </Cell>\r\n                       </Card>\r\n                   </Div>)}\r\n                 </Div>)\r\n               }\r\n             </Group>\r\n             <Group header={<Header mode=\"primary\">Мои задания</Header>}>         \r\n               {employerInfo && \r\n                 cat.map(category =>\r\n                   employerInfo && employerInfo[category] && \r\n                 <Div key={category}style={{padding : 0}}>\r\n                   {employerInfo && employerInfo[category].length != 0 && <Header mode=\"secondary\">{category}</Header> }\r\n                   {employerInfo && employerInfo[category] && employerInfo[category].map(item => <Div key={category+item.name}style={{padding : 0}}>\r\n                       <Card size=\"l\" mode=\"shadow\" className=\"CardBody\" onClick={()=>{props.setDataTransfer(item)\r\n                                                                  props.setActivePanelTask(\"Candidates\")}}>\r\n                           <Cell indicator={item.deadline} expandable >\r\n                             {item.name}\r\n                           </Cell>\r\n                       </Card>\r\n                   </Div>)}\r\n                 </Div>)\r\n               }\r\n             </Group>\r\n             </FormLayout> */}\r\n         </Panel>\r\n\t\t\r\n\t\t\r\n\t\r\n\t);\r\n};\r\n\r\nTask.propTypes = {\r\n};\r\n\r\nexport default Task;\r\n","import React,{ useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\r\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\r\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\r\nimport Button from '@vkontakte/vkui/dist/components/Button/Button';\r\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\r\nimport Cell from '@vkontakte/vkui/dist/components/Cell/Cell';\r\nimport Div from '@vkontakte/vkui/dist/components/Div/Div';\r\nimport Header from '@vkontakte/vkui/dist/components/Header/Header'\r\nimport Separator from '@vkontakte/vkui/dist/components/Separator/Separator'\r\nimport Icon16Dropdown from '@vkontakte/icons/dist/16/dropdown'\r\nimport Counter from '@vkontakte/vkui/dist/components/Counter/Counter'\r\nimport UsersStack from '@vkontakte/vkui/dist/components/UsersStack/UsersStack'\r\nimport Icon16Chevron from '@vkontakte/icons/dist/16/chevron'\r\n\r\nimport Avatar from '@vkontakte/vkui/dist/components/Avatar/Avatar';\r\n// localhost:8000/get_employee?id=id164078040\r\nconst Profile = (props) => {\r\nconst [data, setData] = useState(null);\r\n  useEffect(() => {\r\n    props.setPopout(<ScreenSpinner size='large' />);\r\n    fetch(\"https://cors-anywhere.herokuapp.com/https://task-today-tpuhack.herokuapp.com/get_employee?id=id\"+props.id_v).then(response => response.json())\r\n    .then(result =>{\r\n        console.log(result);\r\n        setData(result);\r\n        props.setPopout(null);\r\n    })\r\n}, []);\r\n  return(\r\n\t<Panel id=\"Profile\">\r\n            <PanelHeader>Профиль</PanelHeader>\r\n             <Cell\r\n          size=\"l\"\r\n          // description=\"VKontakte\"\r\n          before={<Avatar src={props.fetchedUser.photo_200}/>}\r\n        >\r\n          {props.fetchedUser.first_name} {props.fetchedUser.last_name}\r\n        </Cell>\r\n        <Separator />\r\n        <Header>\r\n        О себе\r\n      </Header>\r\n      {data &&\r\n            <Div>{data.about}</Div>\r\n          }\r\n      <Separator />\r\n       <Header aside={<Icon16Dropdown />} indicator={<Counter size=\"s\" mode=\"prominent\">4.8</Counter>}>\r\n        Мой рейтинг\r\n      </Header>\r\n      <Div>\r\n        <div style={{\r\n          backgroundImage: 'linear-gradient(135deg, #f24973 0%, #3948e6 100%)',\r\n          height: 200,\r\n          display: 'flex',\r\n          alignItems: 'flex-end',\r\n          justifyContent: 'center',\r\n          paddingBottom: '6px',\r\n          borderRadius: 12\r\n        }}>\r\n          <UsersStack\r\n\r\n            style={{ color: \"#fff\" }}\r\n          >Проголосовали 228 человек</UsersStack>\r\n        </div>\r\n      </Div>\r\n      <Separator />\r\n        <Header>\r\n        История заданий\r\n      </Header>\r\n      <Separator />\r\n      <Header mode=\"secondary\"  aside={<Icon16Chevron />}>\r\n        Стать работодателем\r\n      </Header>\r\n          </Panel>\r\n        \r\n);\r\n}\r\nProfile.propTypes = {\r\n};\r\n\r\nexport default Profile;\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\r\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\r\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\r\nimport Textarea from '@vkontakte/vkui/dist/components/Textarea/Textarea'\r\nimport Button from '@vkontakte/vkui/dist/components/Button/Button';\r\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\r\nimport FixedLayout from '@vkontakte/vkui/dist/components/FixedLayout/FixedLayout'\r\nimport Cell from '@vkontakte/vkui/dist/components/Cell/Cell';\r\nimport Div from '@vkontakte/vkui/dist/components/Div/Div';\r\nimport Avatar from '@vkontakte/vkui/dist/components/Avatar/Avatar';\r\nimport List from \"@vkontakte/vkui/dist/components/List/List\"\r\nimport Checkbox from '@vkontakte/vkui/dist/components/Checkbox/Checkbox'\r\nimport Input from '@vkontakte/vkui/dist/components/Input/Input'\r\nimport Select from '@vkontakte/vkui/dist/components/Select/Select'\r\nimport Search from \"@vkontakte/vkui/dist/components/Search/Search\"\r\n\r\nimport '../css/GiveTask.css'\r\n\r\nimport { FormLayout } from '@vkontakte/vkui';\r\nimport { Alert } from '@vkontakte/vkui';\r\n\r\n\r\n\r\n\r\nconst GiveTask = (props) => {        \r\n\r\n    const thematics = [\r\n        {id: 1, name: \"Программирование\"},\r\n        {id: 2, name: \"Доставка\"},\r\n        {id: 3, name: \"Учёба\"},\r\n        {id: 4, name: \"Дизайн\"},\r\n        {id: 5, name: \"Пение\"},\r\n        {id: 6, name: \"Готовка\"},\r\n        {id: 7, name: \"Minecraft\"},\r\n        {id: 8, name: \"Общение\"},\r\n        {id: 9, name: \"Рисование\"},\r\n        {id: 10, name: \"Скульптура\"},\r\n        {id: 11, name: \"Прочее\"},        \r\n      ];\r\n\r\n    const [search, SetSearch] = useState(\"\");\r\n\r\n    const onChange = (e) =>\r\n    {\r\n        SetSearch(e.target.value);        \r\n    }   \r\n\r\n    const onClick = (e) =>\r\n    {        \r\n        createTask();    \r\n      //   props.setPopout(\r\n      //       <Alert\r\n      //   actions={[{\r\n      //     title: 'Отмена',\r\n      //     autoclose: true,\r\n      //     mode: 'cancel'\r\n      //   }, {\r\n      //     title: 'Добавить',\r\n      //     autoclose: true,\r\n      //   }]}\r\n      // >          \r\n      //   <h2>Подтвердите действие</h2>\r\n      //   <p>Добавить пользователю право на модерацию контента.</p>\r\n      // </Alert>\r\n      //   ); \r\n    }\r\n\r\n    const createTask = ()=>\r\n    {   \r\n        props.setPopout(<ScreenSpinner size='large' />);\r\n        const name = document.getElementById(\"TaskName\").value;\r\n        const about = document.getElementById(\"About\").value;\r\n        const deadLine = document.getElementById(\"Dead-line\").value;\r\n        const thematic = document.getElementById(\"Thematic\").value;\r\n        const price = document.getElementById(\"TaskPrice\").value;\r\n        console.log(thematic, thematics.find(({id}) =>{return id == thematic}).name);\r\n        fetch(`https://cors-anywhere.herokuapp.com/https://task-today-tpuhack.herokuapp.com/create_task?name=${name}&about=${about}&categori=${thematics.find(({id}) =>{return id == thematic}).name}&price=${price}&id_employer=id${props.id_v}&deadline=${deadLine}`)\r\n    \t\t.then(response => response.json())\r\n    \t\t.then(result =>{\r\n        \ttry{\r\n                props.setPopout(null);\r\n                // console.log(result)\r\n\t\t\t\tif (result == \"0\") {\r\n          // console.log(thematics.find(({id}) =>{return id == thematic}).name);\r\n\t\t\t\t\talert(\"Ошибка подачи задания\");\r\n\t\t\t\t}else{\r\n                    alert(\"Задание подано\")\r\n                    fetch(`https://cors-anywhere.herokuapp.com/https://task-today-tpuhack.herokuapp.com/set_new_task?task_id=${result}&id=id${props.id_v}`)\r\n    \t\t        .then(response => response.json())\r\n    \t\t        .then(result2 =>{   \r\n                        props.setActiveStory(\"Task\")                         \r\n                        console.log(result2);\r\n                    });\t\t\t\t\r\n\t\t\t\t}\t\t\t\t\r\n            }\r\n            catch(err){props.setPopout(null); console.log(err);\r\n            }});\r\n    }    \r\n    return(\r\n        <Panel id={props.id}>\r\n        \r\n\t\t<PanelHeader className='PanelHeader'>Дать задание</PanelHeader>\r\n        <FormLayout>            \r\n            <div className=\"MainText\" >\r\n\t\t        <div >Укажите ваше задание</div>\r\n            </div>            \r\n            <Input id=\"TaskName\" top = \"Название\" type=\"text\" defaultValue=\"\" status=\"default\"/>\r\n            <Textarea className=\"About\" id=\"About\" top=\"О задании\" placeholder=\"Расскажите что должен делать c:\" status=\"default\"></Textarea>\r\n            <Input id=\"Dead-line\" top = \"Дедлайн\" type=\"date\" defaultValue=\"\" status=\"default\"/>                       \r\n            <Select id=\"Thematic\" placeholder=\"Категория\"status=\"default\">\r\n                {thematics.map(thematic => <option key={thematic.id} value={thematic.id}>{thematic.name}</option>)}                \r\n            </Select>                              \r\n            <Input id=\"TaskPrice\" top = \"Вознаграждение\" type=\"text\" defaultValue=\"\" status=\"default\"/>\r\n            <Button size=\"xl\" onClick={createTask} status=\"default\">Добавить</Button>  \r\n        </FormLayout>\r\n        \r\n        \r\n\t</Panel>\r\n    );\r\n\t\r\n};\r\n\r\nGiveTask.propTypes = {\r\n\t\r\n};\r\n\r\nexport default GiveTask;\r\n","import React,{ useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\r\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\r\nimport Cell from '@vkontakte/vkui/dist/components/Cell/Cell';\r\nimport Search from '@vkontakte/vkui/dist/components/Search/Search'\r\nimport List from '@vkontakte/vkui/dist/components/List/List'\r\nimport Card from '@vkontakte/vkui/dist/components/Card/Card'\r\n\r\nimport { FormLayout } from '@vkontakte/vkui';\r\nimport '../css/AllTask.css'\r\n\r\nfunction isEmpty(object) {\r\n    return !(JSON.stringify(object) == \"{}\");\r\n  }\r\n\r\nconst AllTask= (props) => {\r\n    const thematics = [\r\n        {id: 1, name: \"Программирование\"},\r\n        {id: 2, name: \"Доставка\"},\r\n        {id: 3, name: \"Учёба\"},\r\n        {id: 4, name: \"Рисование\"},\r\n        {id: 5, name: \"Дизайн\"},\r\n        {id: 6, name: \"Пение\"},\r\n        {id: 7, name: \"Готовка\"},\r\n        {id: 8, name: \"Minecraft\"},\r\n        {id: 9, name: \"Общение\"},\r\n        {id: 10, name: \"Прочее\"},\r\n        \r\n      ];\r\n\r\n    const [info,setInfo]=useState({});\r\n    const [search, SetSearch] = useState(\"\");\r\n    const onChange = (e) =>\r\n    {\r\n        SetSearch(e.target.value);        \r\n    } \r\n\r\n    useEffect(() => {\r\n        props.setActivePanelAllTask(\"AllTask\");\r\n        // props.setPopout(<ScreenSpinner size='large' />);\r\n        // getData(setDostavkaData,'Доставка');\r\n        // getData(setCodingData,'Программирование');\r\n        // // getData(setStudyData,'Учёба');\r\n        // getData(setDesigneData,'Дизайн');\r\n        // getData(setCookData,'Готовка');\r\n        // getData(setProcheeData,'Прочее');\r\n\r\n    //     fetch(\"http://localhost:8000/get_task\")\r\n    //     .then(response => response.json())\r\n    //     .then(result =>{\r\n    //     try{\r\n    //         setData(result);\r\n    //         console.log(result)\r\n    // }catch(err){ console.log(err);\r\n    // }\r\n    // }).catch(err => console.log(err))\r\n        // fetch(\"https://cors-anywhere.herokuapp.com/https://task-today-tpuhack.herokuapp.com/get_task/\").then(response => response.json())\r\n        // .then(result =>{\r\n        //     console.log(result);\r\n        //     setInfo(result);\r\n        //     props.setPopout(null);\r\n        // })\r\n    }, []);\r\n    return(\r\n        <Panel id={props.id}>\r\n            \r\n            <PanelHeader>Все категории</PanelHeader>\r\n            <FormLayout className=\"FormLayoutAllTask\">\r\n                <Search className=\"SearchAllTask\" value={search} onChange={onChange} after={null}/>\r\n                {thematics.length > 0 &&\r\n                    <List>\r\n                        {thematics.filter(({name})=>{return name.toLowerCase().indexOf(search.toLowerCase())>-1}).map((thematic,index)=>\r\n                            <Card size=\"l\" mode=\"shadow\" key={thematic.name} className=\"CardBodyAllTask\" onClick={()=>{\r\n                                props.setDataTransfer(thematic)\r\n                                props.setActivePanelAllTask(\"ThematicsTask\");\r\n                            }}>\r\n                            <Cell expandable >\r\n                              {thematic.name}\r\n                            </Cell>\r\n                        </Card>\r\n                        )}\r\n                        \r\n                    </List>\r\n                }  \r\n            </FormLayout>\r\n            \r\n            \r\n        </Panel>\r\n    );\r\n\t\r\n};\r\n\r\nAllTask.propTypes = {\r\n};\r\n\r\nexport default AllTask;\r\n","import React, {  useState, useEffect } from 'react';\r\n\r\nimport ModalPage from '@vkontakte/vkui/dist/components/ModalPage/ModalPage'\r\nimport ModalRoot from '@vkontakte/vkui/dist/components/ModalRoot/ModalRoot'\r\nimport ModalPageHeader from '@vkontakte/vkui/dist/components/ModalPageHeader/ModalPageHeader'\r\nimport PanelHeaderButton from '@vkontakte/vkui/dist/components/PanelHeaderButton/PanelHeaderButton'\r\nimport FormLayout from '@vkontakte/vkui/dist/components/FormLayout/FormLayout'\r\nimport Button from '@vkontakte/vkui/dist/components/Button/Button';\r\nimport InfoRow from '@vkontakte/vkui/dist/components/InfoRow/InfoRow'\r\n\r\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\r\nimport Icon24Cancel from '@vkontakte/icons/dist/24/cancel';\r\nimport Icon24Done from '@vkontakte/icons/dist/24/done';\r\n\r\nimport '../css/Card_Info.css'\r\nimport { Group, Alert } from '@vkontakte/vkui';\r\n\r\n// function load_info(setPopout,chooseParcels,setParcelsData){\r\n//     fetch(\"https://cors-anywhere.herokuapp.com/https://moyaposylka.ru/api/v1/trackers/\"+chooseParcels[1]+\"/\"+chooseParcels[2])\r\n//     .then(response => response.json())\r\n//     .then(result =>{\r\n//         try{\r\n//             if (result.status) {setParcelsData(null);\r\n//                 console.log(result)}\r\n//                 else{\r\n//                     console.log(result)\r\n// \t\t\t\t\tsetParcelsData(result);\r\n\t\t\t\t\t\r\n//                 }\r\n//         }catch{\r\n//         }\r\n//         setPopout(null);\r\n\r\n//     }).catch(err => console.log(err))\r\n// }\r\n\r\nconst Card_Info = props => {\r\n\r\n\t\r\n    \r\n\r\n    // useEffect(() => {\r\n    //     load_info(props.setPopout,props.chooseParcels,setParcelsData);\r\n    // }, []);\r\n\r\n    // const open_information = () =>{\r\n\t// \tif (props.chooseParcels != null) {\r\n\t// \t\t// console.log(chooseParcels);\r\n\t// \t\tprops.setPopout(<ScreenSpinner size='large' />);\r\n\t// \t\tload_info(props.setPopout,props.chooseParcels,setParcelsData);\r\n\t// \t}\r\n\t\t\r\n\t// }\r\n\r\n    const closeModal = () =>{\r\n\t\tprops.setActiveModal(null);\r\n\t\t// console.log(props.chooseCard);\r\n\t} \r\n\tconst go = (string) =>{\r\n\t\tprops.setActivePanel(string)\r\n\t}\r\n\tconst agree = (item) =>{\r\n\t\tconsole.log(item.categori);\r\n\t\tfetch(\"https://cors-anywhere.herokuapp.com/https://task-today-tpuhack.herokuapp.com/set_new_active_task/?task_id=\"+item._id+\"&id=id\"+props.id_v+\"&category=\"+item.categori)\r\n    \t\t.then(response => response.json())\r\n    \t\t.then(result =>{\r\n        \ttry{\r\n\t\t\t\t// console.log(result);\r\n\t\t\t\tswitch (result) {\r\n\t\t\t\t\tcase 1 : \r\n\t\t\t\t\t\talert(\"Заявка подана\")\r\n\t\t\t\t\t\tprops.setActiveStory(\"Task\")\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 2 : \r\n\t\t\t\t\t\talert(\"Вы уже подали зайвку\")\r\n\t\t\t\t\t\tprops.setActiveStory(\"Task\")\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\talert(\"Error  Заявка неподана\")\r\n\t\t\t\t\t\tprops.setActiveStory(\"Task\")\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\t\r\n\t\t\t\t// if (result == \"1\") {\r\n\t\t\t\t// \t// setActiveStory('Task');\t\t\t\r\n\t\t\t\t// \talert(\"Заявка подана\")\r\n\t\t\t\t// \t// fetch(\"http://localhost:8000/delete_task?task_id=\"+item._id+\"&task_cat=\"+item.categori)\r\n    \t\t\t// \t// \t.then(response => response.json())\r\n    \t\t\t// \t// \t.then(result =>{\r\n\t\t\t\t// \t// \t\tconsole.log(result);\r\n\t\t\t\t// \t// \t});\r\n\t\t\t\t\t\r\n\t\t\t\t// \tprops.setActiveStory(\"Task\")\t\r\n\t\t\t\t// \t// setActiveStory('GiveTask');\t\t\t\t\r\n\t\t\t\t// }else{\r\n\t\t\t\t\t\r\n\t\t\t\t// \talert(\"Eroor Заявка неподана\")\r\n\t\t\t\t// \tprops.setActiveStory(\"Task\")\r\n\t\t\t\t\t\r\n\t\t\t\t// }\r\n\t\t\t\t// console.log(result)\r\n        }catch(err){ alert(\"Eroor Заявка неподана\");\r\n        }\r\n        \r\n\r\n    \t}).catch(err => alert(\"Eroor Заявка неподана\"))\r\n\t}\r\n    return (\r\n        <ModalRoot className=\"ModalRootCard\"  activeModal={props.activeModal}>\r\n\t\t\t\t<ModalPage className=\"ModalPageCrad\" id =\"modal_inform\"\r\n\t\t\t\tonClose={closeModal}\r\n\t\t\t\theader={\r\n\t\t\t\t\t<ModalPageHeader className=\"ModalHaeder\"\r\n\t\t\t\t\t\tleft={<PanelHeaderButton onClick={closeModal}><Icon24Cancel /></PanelHeaderButton>}\r\n              \t\t\t right={<p onClick={()=>{agree(props.chooseCard)}}>Подать заявку</p>} //<PanelHeaderButton onClick={closeModal}><Icon24Done /></PanelHeaderButton>\r\n\t\t\t\t\t>Information</ModalPageHeader>\r\n\t\t\t\t}>\r\n\t\t\t\t\t<FormLayout className=\"FormLayoutModal\">\r\n\t\t\t\t\t\t<Group className=\"GroupModal\">\r\n\t\t\t\t\t\t\t<p className=\"Name\">Название :{props.chooseCard.name}</p>\r\n\t\t\t\t\t\t\t<p>Описание :{props.chooseCard.about}</p>\r\n\t\t\t\t\t\t\t<p>Цена :{props.chooseCard.price}</p>\r\n\t\t\t\t\t\t\t<p>Закончить до :{props.chooseCard.deadline}</p>\r\n\t\t\t\t\t\t</Group>\r\n\t\t\t\t\t</FormLayout>\r\n\t\t\t\t</ModalPage>\r\n\t\t</ModalRoot>\r\n    );\r\n\r\n}\r\n\r\nexport default Card_Info;","import React,{ useState, useEffect, useRef, useCallback } from 'react';\r\nimport io from 'socket.io-client';\r\nimport PropTypes from 'prop-types';\r\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\r\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\r\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\r\nimport CardGrid from '@vkontakte/vkui/dist/components/CardGrid/CardGrid'\r\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\r\nimport Spinner from '@vkontakte/vkui/dist/components/Spinner/Spinner'\r\nimport Button from '@vkontakte/vkui/dist/components/Button/Button';\r\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\r\nimport Cell from '@vkontakte/vkui/dist/components/Cell/Cell';\r\nimport Search from '@vkontakte/vkui/dist/components/Search/Search'\r\nimport List from '@vkontakte/vkui/dist/components/List/List'\r\nimport CardScrol from \"@vkontakte/vkui/dist/components/CardScroll/CardScroll\"\r\nimport Card from '@vkontakte/vkui/dist/components/Card/Card'\r\nimport Div from '@vkontakte/vkui/dist/components/Div/Div';\r\nimport Footer from '@vkontakte/vkui/dist/components/Footer/Footer'\r\nimport PanelHeaderButton from '@vkontakte/vkui/dist/components/PanelHeaderButton/PanelHeaderButton'\r\nimport Icon24MoreHorizontal from '@vkontakte/icons/dist/24/more_horizontal'\r\n\r\nimport Avatar from '@vkontakte/vkui/dist/components/Avatar/Avatar';\r\nimport { ModalRoot, ModalPage } from '@vkontakte/vkui';\r\nimport { FormLayout } from '@vkontakte/vkui';\r\nimport useTaskHook from '../hooks/useTaskHook';\r\nimport CardInfo from \"./Card_Info\"\r\nimport '../css/ThematicsTask.css'\r\n\r\n\r\n\r\nfunction isEmpty(object) {\r\n    return !(JSON.stringify(object) == \"{}\");\r\n  }\r\nfunction getRandomInt(max) {\r\n  return Math.floor(Math.random() * Math.floor(max));\r\n}\r\n\r\nvar chooseCard = {}\r\nconst ThematicsTask = (props) => {\r\n\r\n    const size_card = [\"l\",\"m\"]\r\n    const [info,setInfo]=useState({});\r\n    const [pageNumber, setPageNumber] = useState(0);\r\n    const [activeModal, setActiveModal] = useState(null);\r\n\r\n    const {loading, error, tasks, hasMore} = useTaskHook(pageNumber,props.dataTransfer.name);\r\n\r\n    const observer = useRef();\r\n    const lastCardElementRef = useCallback(node =>{\r\n        // console.log(node);\r\n        if (loading) return\r\n        if (observer.current) observer.current.disconnect();\r\n        observer.current = new IntersectionObserver(entries =>{\r\n            if (entries[0].isIntersecting){\r\n                setPageNumber(prevPageNumber => prevPageNumber + 1);\r\n            }\r\n        })\r\n        if (node) observer.current.observe(node);\r\n    },[loading,hasMore])\r\n    \r\n    return(\r\n        <Panel id={props.id}>\r\n            <PanelHeader\r\n                left={<PanelHeaderButton onClick={() => {props.setActivePanelAllTask(\"AllTask\")}}><Icon24Back/></PanelHeaderButton>}\r\n                right={<PanelHeaderButton><Icon24MoreHorizontal /></PanelHeaderButton>} \r\n        >{props.dataTransfer.name}</PanelHeader> \r\n        <CardInfo activeModal={activeModal} setActiveModal={setActiveModal} \r\n                          chooseCard={chooseCard} setActiveStory={props.setActiveStory} id_v={props.id_v}></CardInfo>\r\n        <div className=\"CardGridThematics\" id=\"grid\" >\r\n            {tasks.map((task,index) => {\r\n                if (tasks.length === index+1){\r\n                    return (\r\n                        <div key={index}>\r\n                        \r\n                        <Card  size=\"l\" mode=\"shadow\" className=\"CardBodyThematics\" onClick={()=>{\r\n                                \r\n                                chooseCard = task;\r\n                                setActiveModal(\"modal_inform\");\r\n                            }}>\r\n                            <Cell>\r\n                                <div className='NameTask'>{task.name}</div>\r\n                                <div className='PriceTask'>Цена: {task.price}</div>\r\n                                <div className='DeadlineTask'>Deadline:{task.deadline}</div>\r\n                            </Cell>\r\n                        </Card>\r\n                        <div ref={lastCardElementRef} style={{background: 'black'}}></div>\r\n                        </div>);\r\n                    \r\n                }else{\r\n                    return (\r\n                        <Card size=\"l\" key={index} mode=\"shadow\" className=\"CardBodyThematics\" onClick={()=>{\r\n                            chooseCard= task;\r\n                            setActiveModal(\"modal_inform\");\r\n                        }}>\r\n                            <Cell>\r\n                                <div className='NameTask'>{task.name}</div>\r\n                                <div className='PriceTask'>Цена: {task.price}</div>\r\n                                <div className='DeadlineTask'>Deadline:{task.deadline}</div>\r\n                            </Cell>\r\n                        </Card>);\r\n                }\r\n                \r\n            })}\r\n            <div>{loading?(<Spinner size=\"regular\" style={{ paddingTop: 20,paddingBottom: 20 }} />):\r\n                           <Footer className=\"FooterThematics\">{tasks.length} заданий</Footer>}</div>\r\n            <div>{error && \"Error\"}</div>\r\n            \r\n        </div>\r\n        </Panel>\r\n        \r\n    );\r\n\t\r\n};\r\n\r\nThematicsTask.propTypes = {\r\n};\r\n\r\nexport default ThematicsTask;\r\n","import {useEffect, useState} from 'react';\r\n\r\nexport default function useTaskHook(pageNumber,category) {\r\n    \r\n    var skip = 0;\r\n    const limit = 5;\r\n\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(false);\r\n    const [tasks, setTasks] = useState([]);\r\n    const [hasMore, setHasMore] = useState(true);\r\n\r\n    skip += pageNumber*limit;\r\n\r\n    useEffect(()=>{\r\n        if(hasMore){\r\n        setLoading(true);\r\n        setError(false);\r\n        fetch(`https://cors-anywhere.herokuapp.com/https://task-today-tpuhack.herokuapp.com/get_task_v2?skip=${skip}&limit=${limit}&category=${category}`)\r\n        .then(responce => responce.json())\r\n        .then(results => {\r\n            setTasks(prevTaks =>{\r\n                // console.log([...prevTaks, results ]);\r\n                return [...prevTaks, ...results ]\r\n                // return results;\r\n                \r\n            })\r\n            setHasMore(results.length > 0);\r\n            setLoading(false);\r\n            \r\n        }).catch(err =>{\r\n            setError(true);\r\n            return;\r\n        })\r\n    }else{\r\n        setLoading(false);\r\n        setError(false);\r\n    }\r\n\r\n    },[pageNumber]);\r\n    return {loading,error,tasks,hasMore};\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport Epic from '@vkontakte/vkui/dist/components/Epic/Epic'\r\nimport PropTypes from 'prop-types';\r\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\r\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\r\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\r\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\r\nimport Button from '@vkontakte/vkui/dist/components/Button/Button';\r\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\r\nimport Cell from '@vkontakte/vkui/dist/components/Cell/Cell';\r\nimport Header from '@vkontakte/vkui/dist/components/Header/Header'\r\nimport Card from '@vkontakte/vkui/dist/components/Card/Card'\r\nimport PanelHeaderButton from '@vkontakte/vkui/dist/components/PanelHeaderButton/PanelHeaderButton'\r\nimport Icon24MoreHorizontal from '@vkontakte/icons/dist/24/more_horizontal'\r\nimport Div from '@vkontakte/vkui/dist/components/Div/Div';\r\nimport Alert from '@vkontakte/vkui/dist/components/Alert/Alert'\r\nimport Tabbar from '@vkontakte/vkui/dist/components/Tabbar/Tabbar'\r\nimport Icon28NewsfeedOutline from '@vkontakte/icons/dist/28/newsfeed_outline'\r\nimport Icon28UserOutline from '@vkontakte/icons/dist/28/user_outline'\r\nimport Icon28Notifications from '@vkontakte/icons/dist/28/notifications'\r\nimport Icon28More from '@vkontakte/icons/dist/28/more'\r\nimport TabbarItem from '@vkontakte/vkui/dist/components/TabbarItem/TabbarItem'\r\nimport Avatar from '@vkontakte/vkui/dist/components/Avatar/Avatar';\r\nimport { FormLayout, Input } from '@vkontakte/vkui';\r\nimport '../css/Candidates.css'\r\n\r\nconst AgreeWithTask = (props,person,setEmployeeInfo) =>{\r\n  \r\n  fetch(\"https://cors-anywhere.herokuapp.com/https://task-today-tpuhack.herokuapp.com/agree_employer?task_id=\"+props.dataTransfer._id+\"&category=\"+props.dataTransfer.categori+\"&id=\"+person.vk_id).then(response => response.json())\r\n  .then(result =>{\r\n    switch (result) {\r\n      case 1 : \r\n        alert(\"Работник нанят\")\r\n        props.setActivePanelTask(\"Task\")\r\n      break;\r\n      case 0 : \r\n        alert(\"Работник не нанятб попробуйте ещ раз\")\r\n        props.setActivePanelTask(\"Task\")\r\n      break;\r\n      default:\r\n        alert(\"Error  Заявка неподана\")\r\n        props.setActivePanelTask(\"Task\")\r\n      break;\r\n    }\t\r\n  })\r\n}\r\n\r\nconst Candidates = (props) => {\r\n\r\n \r\n  const [EmployeeInfo,setEmployeeInfo]=useState(null);\r\n\r\n  const [activeModal, setActiveModal] = useState(null);\r\n\r\n  useEffect(() => {\r\n      props.setPopout(<ScreenSpinner size='large' />);\r\n      async function GetData(){\r\n        fetch(\"https://cors-anywhere.herokuapp.com/https://task-today-tpuhack.herokuapp.com/get_candidates?task_id=\"+props.dataTransfer._id+\"&category=\"+props.dataTransfer.categori).then(response => response.json())\r\n        .then(result =>{\r\n          console.log(result);\r\n          setEmployeeInfo(result);\r\n          props.setPopout(null);\r\n          \r\n        })\r\n      }\r\n      GetData();\r\n  }, []);\r\n\r\n\r\n\r\n\treturn(\r\n\t\t<Panel id={props.id}>\r\n            \r\n       <PanelHeader\r\n        left={<PanelHeaderButton onClick={() => {props.setActivePanelTask(\"Task\")}}><Icon24Back/></PanelHeaderButton>}\r\n        right={<PanelHeaderButton><Icon24MoreHorizontal /></PanelHeaderButton>} \r\n        \r\n        >Заявки</PanelHeader>\r\n        <FormLayout className=\"FormBody\" >\r\n        {(EmployeeInfo&&EmployeeInfo.length != 0)?(EmployeeInfo.map((person,index) => \r\n            <Card size=\"l\" mode=\"shadow\" key={index} >\r\n                <Cell className=\"CellBody\" key={index}>\r\n                    <div  className=\"DataBody\">\r\n                        <div>{person.vk_id}</div>\r\n                        <div>О работнике : {person.about}</div>\r\n                        <div>Рейтинг {person.rate}</div>\r\n                    </div>\r\n                    <Button  className=\"BT\" onClick={()=>{props.setPopout(<Alert actionsLayout=\"vertical\"\r\n                                                          actions={[{\r\n                                                                      title: 'Да, согласен',\r\n                                                                      autoclose: true,\r\n                                                                      mode: 'destructive',\r\n                                                                      action: () => AgreeWithTask(props,person,setEmployeeInfo),\r\n                                                                    }, {\r\n                                                                      title: 'Отмена',\r\n                                                                      autoclose: true,\r\n                                                                      mode: 'cancel'\r\n                                                                    }]}\r\n                                                                    onClose={() => props.setPopout(null)}>\r\n                                                          <h2>Подтвердите действие</h2>\r\n                                                          <p>Вы уверены, что хотите выбрать этого пользователя на работу?</p>\r\n                                                          </Alert>)\r\n                      }}>Нанять</Button>\r\n                </Cell>\r\n            </Card>\r\n        )):((EmployeeInfo == \"0\")?(<Div>\r\n          Пока тут пусто\r\n        </Div>):(<Div>Заявок пока нету</Div>))\r\n            \r\n\r\n        }\r\n        </FormLayout>\r\n          \r\n    </Panel>\r\n\t\t\r\n\t\r\n\t);\r\n};\r\n\r\nCandidates.propTypes = {\r\n};\r\n\r\nexport default Candidates;\r\n","import React, { useState, useEffect } from 'react';  //eslint-disable-next-line\r\nimport io from 'socket.io-client';\r\nimport Epic from '@vkontakte/vkui/dist/components/Epic/Epic'\r\nimport PropTypes from 'prop-types';\r\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\r\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\r\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\r\nimport Button from '@vkontakte/vkui/dist/components/Button/Button';\r\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\r\nimport Cell from '@vkontakte/vkui/dist/components/Cell/Cell';\r\nimport Header from '@vkontakte/vkui/dist/components/Header/Header'\r\nimport Card from '@vkontakte/vkui/dist/components/Card/Card'\r\nimport PanelHeaderButton from '@vkontakte/vkui/dist/components/PanelHeaderButton/PanelHeaderButton'\r\nimport Icon24MoreHorizontal from '@vkontakte/icons/dist/24/more_horizontal'\r\nimport Input from '@vkontakte/vkui/dist/components/Input/Input'\r\nimport Div from '@vkontakte/vkui/dist/components/Div/Div';\r\nimport Tabbar from '@vkontakte/vkui/dist/components/Tabbar/Tabbar'\r\nimport Icon28NewsfeedOutline from '@vkontakte/icons/dist/28/newsfeed_outline'\r\nimport Icon28UserOutline from '@vkontakte/icons/dist/28/user_outline'\r\nimport Icon28Notifications from '@vkontakte/icons/dist/28/notifications'\r\nimport Icon28More from '@vkontakte/icons/dist/28/more'\r\nimport TabbarItem from '@vkontakte/vkui/dist/components/TabbarItem/TabbarItem'\r\nimport Avatar from '@vkontakte/vkui/dist/components/Avatar/Avatar';\r\nimport { FormLayout } from '@vkontakte/vkui';\r\n\r\nimport '../css/Chat.css'\r\n\r\n\r\nconst Chat = (props) => {\r\n\r\n \r\n  const [activeInfo,setActiveInfo]=useState({});\r\n  // var socket = io.connect('http://localhost:8000/chats');\r\n  const [activeTasks, setActiveTasks] = useState({});\r\n  const [dataMessage, setDataMessage] = useState(null);\r\n\r\n  useEffect(() => {\r\n      // props.setPopout(<ScreenSpinner size='large' />);\r\n      async function GetData(){\r\n        fetch(`https://cors-anywhere.herokuapp.com/https://task-today-tpuhack.herokuapp.com/get_active_task?id=id${props.id_v}`)\r\n        .then(response => response.json())\r\n        .then(results => {\r\n          console.log(results);\r\n          setActiveTasks(results);\r\n          props.setPopout(null);\r\n        })\r\n      }\r\n      // props.setPopout(null);\r\n      // socket.on();\r\n      // GetData();\r\n    \r\n      \r\n  }, []);\r\n\r\n\r\n\r\n\treturn(\r\n\t\t<Panel id={props.id}>\r\n            \r\n       <PanelHeader\r\n        right={<PanelHeaderButton><Icon24MoreHorizontal /></PanelHeaderButton>} \r\n       >Чаты c Работадателем</PanelHeader>\r\n          <FormLayout>\r\n            {/* {dataMessage && dataMessage.map(item =>\r\n              <div>\r\n                {item.my}\r\n              </div>\r\n            )\r\n              \r\n\r\n            } */}\r\n            <div>{props.dataTransfer.name}</div>\r\n        </FormLayout>\r\n    </Panel>\r\n\t\t\r\n\t\r\n\t);\r\n};\r\n\r\nChat.propTypes = {\r\n};\r\n\r\nexport default Chat;\r\n","import React, { useState, useEffect } from 'react';\nimport bridge from '@vkontakte/vk-bridge';\nimport View from '@vkontakte/vkui/dist/components/View/View';\nimport io from 'socket.io-client';\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport Tabbar from '@vkontakte/vkui/dist/components/Tabbar/Tabbar'\nimport Icon28NewsfeedOutline from '@vkontakte/icons/dist/28/newsfeed_outline'\nimport Epic from '@vkontakte/vkui/dist/components/Epic/Epic'\nimport Icon28UserOutline from '@vkontakte/icons/dist/28/user_outline'\nimport Icon28Notifications from '@vkontakte/icons/dist/28/notifications'\nimport Icon28More from '@vkontakte/icons/dist/28/more'\nimport Icon28AddOutline from '@vkontakte/icons/dist/28/add_outline';\nimport Icon24Chats from '@vkontakte/icons/dist/24/chats';\nimport TabbarItem from '@vkontakte/vkui/dist/components/TabbarItem/TabbarItem'\n\nimport '@vkontakte/vkui/dist/vkui.css';\n\nimport FirstConnect from './panels/FirstConnect';\nimport Task from './panels/Task';\nimport Folowers from './panels/Folowers'\nimport Profile from './panels/Profile'\nimport GiveTask from './panels/GiveTask'\nimport Notifications from './panels/Notifications'\nimport AllTask from './panels/AllTask'\nimport ThematicsTask from './panels/ThematicsTask'\nimport Candidates from './panels/Candidates';\nimport Chats from './panels/Chats'\n\nvar chooseCard = []\nvar url = new URL(window.location.href);\nconst id_v = url.searchParams.get(\"vk_user_id\");\n// const vk_app_id = url.searchParams.get(\"vk_app_id\");\n// const auth_key = url.searchParams.get(\"vk_auth_key\")\nconst sign = url.searchParams.get(\"sign\");\n// console.log(url)\n// console.log(\"SIGN \"+sign);\n// var socket = io.connect('http://localhost:8000');\n// socket.emit(\"join\",{id_v : id_v, url:url.href, sign: sign})\nconst App = () => {\n\tconst [activePanelTask, setActivePanelTask] = useState(\"Task\");\n\tconst [activePanelAllTask, setActivePanelAllTask] = useState(\"AllTask\");\n\tconst [dataTransfer, setDataTransfer] = useState(null);\n\tconst [activeStory, setActiveStory] = useState(\"\");\n\tconst [fetchedUser, setUser] = useState(null); \n\tconst [data, setData] = useState(null);\n\tconst [countActiveTask, setCountActiveTask] = useState(null);\n\tconst [popout, setPopout] = useState(null); //<ScreenSpinner size='large' />\n\n\n\tuseEffect(()=>{\n\t\tif (data) {setCountActiveTask(data.active_task.length)}\n\t},[activeStory,activePanelTask,activePanelAllTask]); //,[activeStory,activePanelTask,activePanelAllTask]\n\n\tuseEffect(() => {\n\t\tbridge.subscribe(({ detail: { type, data }}) => {\n\t\t\tif (type === 'VKWebAppUpdateConfig') {\n\t\t\t\tconst schemeAttribute = document.createAttribute('scheme');\n\t\t\t\tschemeAttribute.value = 'client_light'; // data.scheme ? data.scheme : \n\t\t\t\tdocument.body.attributes.setNamedItem(schemeAttribute);\n\t\t\t}\n\t\t});\n\t\t// async function fetchData() {\n\t\t// \tconst user = await bridge.send('VKWebAppGetUserInfo');\n\t\t// \tsetUser(user);\n\t\t// \tlet response = await fetch(\n\t\t// \t\t\"https://cors-anywhere.herokuapp.com/https://task-today-tpuhack.herokuapp.com/first_connect?id=id\" +\n\t\t// \t\t  id_v\n\t\t// \t  );\n\t\t// \t  let result = await response.json();\n\t\t// \t  // alert(result);\n\t\t// \t  if (result == \"1\") {\n\t\t// \t\tsetActiveStory(\"Task\");\n\t\t// \t\t// setActiveStory(\"Chats\");\n\t\t// \t\t// setActiveStory('AllTask');\n\t\t// \t\t// setActiveStory('GiveTask');\n\t\t// \t  } else {\n\t\t// \t\tsetActiveStory(\"FirstConnect\");\n\t\t// \t  }\n\t\t// \t// setPopout(null);\n\t\t// }\n\t\tasync function fetchData2() {\n\t\t\tconst user = await bridge.send('VKWebAppGetUserInfo');\n\t\t\tsetUser(user);\n\t\t\tlet response = await fetch(\"https://cors-anywhere.herokuapp.com/https://task-today-tpuhack.herokuapp.com/get_employee?id=id\" +id_v);\n\t\t\tlet result = await response.json();\n\t\t\tif (result == \"0\") {\n\t\t\t\t// console.log(\"open FirsConnect\")\n\t\t\t\tsetActiveStory(\"FirstConnect\");\n\t\t\t  } else {\n\t\t\t\t// console.log(\"open Task\")\n\t\t\t\tsetActiveStory(\"Task\");\n\t\t\t\t// setData(result);\n\t\t\t\t// setActiveStory(\"Chats\");\n\t\t\t\t// setActiveStory('AllTask');\n\t\t\t\t// setActiveStory('GiveTask');\n\t\t\t  }\n\t\t}\n\t\t// fetchData();\n\t\tfetchData2();\n\t}, []);\n\n\tconst next = e =>{\n\t\tsetActiveStory(e.currentTarget.dataset.story);\n\t\tsetActivePanelAllTask(\"AllTask\");\n\t}\n\n\treturn (\n\t\t\n\t\t<Epic activeStory={activeStory} tabbar={activeStory != \"FirstConnect\" ?(\n\t\t\t<Tabbar>\n          <TabbarItem\n            onClick={next}\n            selected={activeStory === \"Task\"?1:null}\n\t\t\tdata-story=\"Task\"\n\t\t\t\n            label={countActiveTask}\n            text=\"Задания\"\n          ><Icon28NewsfeedOutline /></TabbarItem>\n          {/* <TabbarItem\n            onClick={next}\n            selected={activeStory}\n            data-story=\"Chats\"\n            text=\"Чат\"\n          ><Icon24Chats /></TabbarItem> */}\n          <TabbarItem\n            onClick={next}\n            selected={activeStory === \"Profile\"?1:null}\n            data-story=\"Profile\"\n            text=\"Профиль\"\n          ><Icon28UserOutline /></TabbarItem>\n          <TabbarItem\n            onClick={next}\n            selected={activeStory === \"GiveTask\"?1:null}\n            data-story=\"GiveTask\"\n            text=\"Дать задание\"\n          ><Icon28AddOutline /></TabbarItem>\n          <TabbarItem\n            onClick={next}\n            selected={activeStory === \"AllTask\"?1:null}\n            data-story=\"AllTask\"\n            text=\"Все задания\"\n          ><Icon28More /></TabbarItem>\n        </Tabbar>):(<div></div>)\n\t\t}>\t\n\t\t\t<View id=\"FirstConnect\" activePanel='FirstConnect' popout={popout}>\n\t\t\t\t<FirstConnect id='FirstConnect' fetchedUser={fetchedUser} setActiveStory={setActiveStory} id_v={id_v} setPopout={setPopout}>\t</FirstConnect>\n\t\t\t</View>\n\t\t\t<View id=\"Task\" activePanel={activePanelTask} popout={popout}>\n\t\t\t\t<Task id='Task' fetchedUser={fetchedUser} id_v={id_v} setActivePanelTask = {setActivePanelTask} setDataTransfer={setDataTransfer} setPopout={setPopout}/>\n\t\t\t\t<Candidates id='Candidates' setActivePanelTask = {setActivePanelTask} dataTransfer = {dataTransfer} setPopout={setPopout} />\n\t\t\t\t<Chats id='Chats' setPopout={setPopout} setActiveStory={setActiveStory} setActivePanelTask = {setActivePanelTask} dataTransfer={dataTransfer}\n\t\t\t\t\t\t\t\t  id_v={id_v}/>\n\t\t\t\t\n\t\t\t</View>\n\t\t\t{/* <View id=\"Chats\" activePanel=\"Chats\" popout={popout}>\n\t\t\t\t<Chats id='Chats' fetchedUser={fetchedUser} setPopout={setPopout} setActiveStory={setActiveStory}\n\t\t\t\t\t\t\t\t  id_v={id_v}/>\n\t\t\t</View> */}\n\t\t\t<View id=\"Profile\" activePanel=\"Profile\" popout={popout}>\n\t\t\t\t<Profile id='Profile' fetchedUser={fetchedUser} id_v={id_v} setPopout={setPopout}/>\n\t\t\t</View>\n\t\t\t<View id=\"GiveTask\" activePanel=\"GiveTask\" popout={popout}>\n\t\t\t\t<GiveTask id='GiveTask' fetchedUser={fetchedUser} id_v={id_v} setPopout={setPopout} setActiveStory={setActiveStory}/>\n\t\t\t</View>\n\t\t\t<View id=\"AllTask\" activePanel={activePanelAllTask} popout={popout}>\n\t\t\t\t<AllTask id='AllTask' fetchedUser={fetchedUser}  setActiveStory={setActiveStory} setActivePanelAllTask={setActivePanelAllTask}   \n\t\t\t\t\t\tsetDataTransfer={setDataTransfer} id_v={id_v} setPopout={setPopout}/>\n\t\t\t\t<ThematicsTask id=\"ThematicsTask\" setActivePanelAllTask={setActivePanelAllTask} \n\t\t\t\t\t\t\t   id_v={id_v} setActiveStory={setActiveStory} dataTransfer = {dataTransfer} \n\t\t\t\t\t\t\t   dataTransfer = {dataTransfer} setPopout={setPopout}></ThematicsTask>\n\t\t\t</View>\n\n\t\t</Epic>\n\t\t\n\t);\n}\n\nexport default App;\n\n","import \"core-js/features/map\";\nimport \"core-js/features/set\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport bridge from \"@vkontakte/vk-bridge\";\nimport App from \"./App\";\n\n// Init VK  Mini App\nbridge.send(\"VKWebAppInit\");\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nif (process.env.NODE_ENV === \"development\") {\n}\n"],"sourceRoot":""}